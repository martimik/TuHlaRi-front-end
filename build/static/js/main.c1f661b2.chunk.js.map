{"version":3,"sources":["js/api.js","components/Login.js","components/Nav.js","components/Product.js","components/Sidebar.js","components/SearchField.js","components/Products.js","components/CreateProduct.js","components/App.js","serviceWorker.js","index.js"],"names":["API_URL","window","location","host","includes","Login","props","classes","useStyles","useState","user","password","credentials","setCredentials","isOpen","setAuthorization","close","enqueueSnackbar","useSnackbar","handleChange","event","target","name","value","authorization","email","className","form","onSubmit","preventDefault","axios","post","then","response","data","userGroup","variant","catch","error","console","Button","type","root","color","log","auth","username","anchorOrigin","vertical","horizontal","TextField","onChange","id","label","textField","autoComplete","margin","makeStyles","theme","marginLeft","spacing","marginRight","width","display","flexDirection","padding","borderRadius","Nav","isLoginOpen","setIsLoginOpen","links","map","link","i","key","to","url","button","onClick","loginIconUp","loginIconDown","background","border","boxShadow","height","transform","transition","backgroundColor","Product","state","this","product","productName","src","logo","alt","shortDescription","longDescription","technologies","technology","components","component","requirement","customer","lifecycle","businessOwner","pricing","React","Component","Sidebar","products","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","aria-controls","Typography","heading","ExpansionPanelDetails","_id","selected","productSelected","setProduct","productContainer","str","length","slice","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","listStyle","minWidth","borderTop","justifyContent","alignItems","borderLeft","opacity","cursor","textAlign","search","searchIcon","InputBase","placeholder","onSearch","inputRoot","input","inputInput","inputProps","grow","flexGrow","position","shape","fade","palette","common","white","breakpoints","up","pointerEvents","transitions","create","Products","setState","searchQuery","currentProduct","getProducts","get","selectedItem","myProducts","filter","creator","productOwner","salesPerson","isIdea","ideas","publicProducts","CreateProduct","businessType","lifecycleStatus","environmentRequirement","setInput","isClassified","setIsClassified","setComponents","setTechnologies","environmentRequirements","setEnvironmentRequirements","customers","setCustomers","image","setImage","imageFile","setImageFile","imageIshidden","setImageIsHidden","deleteComponent","index","deleteTechnology","deleteCustomer","deleteEnvironmentRequirement","disableSubmitOnEnter","readKey","addComponent","addTechnology","addEnvironmentRequirement","addCustomer","noValidate","formData","FormData","append","filename","status","Grid","container","direction","item","xs","inputField","FormControlLabel","control","Switch","checked","labelPlacement","fullWidth","FormControl","onKeyDown","multiline","InputLabel","htmlFor","Select","MenuItem","style","chipContainer","Chip","onDelete","chip","imageField","logoText","IconButton","aria-label","imgHidden","removeButton","accept","multiple","files","reader","FileReader","onload","e","result","readAsDataURL","imgVisible","startIcon","marginTop","maxWidth","minHeight","flex","fontFamily","fontStyle","maxHeight","visibility","marginBottom","right","defaults","withCredentials","App","getLoginState","useEffect","setInterval","preventDuplicate","maxSnack","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uSAEeA,EAFCC,OAAOC,SAASC,KAAKC,SAAS,aAAe,yBAA2B,sD,8NCQzE,SAASC,EAAMC,GAC1B,IAAMC,EAAUC,IADiB,EAEKC,mBAAS,CAAEC,KAAM,GAAIC,SAAU,KAFpC,mBAE1BC,EAF0B,KAEbC,EAFa,KAGzBC,EAAoCR,EAApCQ,OAAQC,EAA4BT,EAA5BS,iBAAkBC,EAAUV,EAAVU,MAC1BC,EAAoBC,wBAApBD,gBAER,SAASE,EAAaC,GAClBP,E,yVAAe,CAAD,GACPD,EADO,eAETQ,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAqE1C,OAAIjB,EAAMkB,cAAcC,MAEhB,yBAAKC,UAAWZ,EAAS,mBAAqB,sBAC1C,0BAAMY,UAAWnB,EAAQoB,KAAMC,SAlB3C,SAAgBR,GACZA,EAAMS,iBACNC,IACKC,KAAK/B,EAAU,UACfgC,MAAK,SAAAC,GAAa,IAAD,EACqBA,EAASC,KAApCT,EADM,EACNA,MAAOH,EADD,EACCA,KAAMa,EADP,EACOA,UACrBpB,EAAiB,CAAEU,QAAOH,OAAMa,cAChClB,EAAgB,0BAA2B,CAAEmB,QAAS,SACtDpB,OAEHqB,OAAM,SAAAC,GACHC,QAAQD,MAAMA,QAQV,kBAACE,EAAA,EAAD,CACIC,KAAK,SACLf,UAAWnB,EAAQmC,KACnBN,QAAQ,YACRO,MAAM,WAJV,YAaR,yBAAKjB,UAAWZ,EAAS,mBAAqB,sBAC1C,0BAAMY,UAAWnB,EAAQoB,KAAMC,SAnF3C,SAAeR,GACXA,EAAMS,iBACNU,QAAQK,IAAIhC,GACZkB,IACKC,KACG/B,EAAU,QACV,GACA,CACI6C,KAAM,CACFC,SAAUlC,EAAYF,KACtBC,SAAUC,EAAYD,YAIjCqB,MAAK,SAAAC,GAAa,IAAD,EACqBA,EAASC,KAApCT,EADM,EACNA,MAAOH,EADD,EACCA,KAAMa,EADP,EACOA,UACjBV,GAASU,GACTpB,EAAiB,CAAEU,QAAOH,OAAMa,cAChCtB,EAAe,CAAEH,KAAM,GAAIC,SAAU,KACrCM,EAAgB,yBAA0B,CACtCmB,QAAS,UACTW,aAAc,CACVC,SAAU,SACVC,WAAY,YAGpBjC,KAEAC,EAAgB,kBAAmB,CAC/BmB,QAAS,QACTW,aAAc,CACVC,SAAU,SACVC,WAAY,eAM3BZ,OAAM,SAAAC,GACHC,QAAQD,MAAMA,GACdrB,EAAgB,kBAAmB,CAC/BmB,QAAS,QACTW,aAAc,CACVC,SAAU,SACVC,WAAY,iBAwChB,kBAACC,EAAA,EAAD,CACIC,SAAUhC,EACViC,GAAG,0BACHC,MAAM,WACN/B,KAAK,OACLI,UAAWnB,EAAQ+C,UACnBC,aAAa,mBACbC,OAAO,SACPjC,MAAOX,EAAYF,OAGvB,kBAACwC,EAAA,EAAD,CACIC,SAAUhC,EACViC,GAAG,0BACHC,MAAM,WACN/B,KAAK,WACLI,UAAWnB,EAAQ+C,UACnBb,KAAK,WACLc,aAAa,mBACbC,OAAO,SACPjC,MAAOX,EAAYD,WAEvB,kBAAC6B,EAAA,EAAD,CACIC,KAAK,SACLf,UAAWnB,EAAQmC,KACnBN,QAAQ,YACRO,MAAM,WAJV,WAcpB,IAAMnC,EAAYiD,aAAW,SAAAC,GAAK,MAAK,CACnCJ,UAAW,CACPK,WAAYD,EAAME,QAAQ,GAC1BC,YAAaH,EAAME,QAAQ,GAC3BE,MAAO,KAEXnC,KAAM,CACFoC,QAAS,OACTC,cAAe,SACfC,QAAS,OACTC,aAAc,c,iBChJP,SAASC,EAAI7D,GAC1B,IAAMC,EAAUC,IADiB,EAEKC,oBAAS,GAFd,mBAE1B2D,EAF0B,KAEbC,EAFa,KAGzB7C,EAAoClB,EAApCkB,cAAeT,EAAqBT,EAArBS,iBAMvB,OACE,yBAAKW,UAAU,WACb,4BACGpB,EAAMgE,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACf,wBAAIC,IAAKD,GACP,kBAAC,IAAD,CAAME,GAAIH,EAAKI,KACb,kBAACpC,EAAA,EAAD,CAAQd,UAAWnB,EAAQsE,QAASL,EAAKlD,YAKjD,kBAACkB,EAAA,EAAD,CACEsC,QAhBN,WACET,GAAgBD,IAgBZzB,MAAM,UACNjB,UAAWnB,EAAQsE,QAElBrD,EAAcC,MAAQ,YAAc,QAAS,IAC9C,kBAAC,IAAD,CACEC,UAAW0C,EAAc7D,EAAQwE,YAAcxE,EAAQyE,iBAG3D,kBAAC3E,EAAD,CACES,OAAQsD,EACRpD,MAAO,kBAAMqD,GAAe,IAC5BtD,iBAAkBA,EAClBS,cAAeA,KAMvB,IAAMhB,EAAYiD,YAAW,CAC3Bf,KAAM,CACJuC,WAAY,QACZC,OAAQ,EACRhB,aAAc,EACdiB,UAAW,wCACXxC,MAAO,QACPyC,OAAQ,GACRnB,QAAS,UAEXc,YAAa,CACXM,UAAW,kBACXC,WAAY,aAEdN,cAAe,CACbM,WAAY,YACZD,UAAW,gBAEbR,OAAQ,CACNlC,MAAO,QACPkB,YAAa,OACbI,QAAS,YACT,UAAW,CACTsB,gBAAiB,a,wCCpEFC,E,YACnB,WAAYlF,GAAQ,IAAD,8BACjB,4CAAMA,KACDmF,MAAQ,GAFI,E,sEAKjB,OAAIC,KAAKpF,MAAMqF,QAEX,yBAAKjE,UAAU,WACb,yBAAKA,UAAU,kBACb,4BAAKgE,KAAKpF,MAAMqF,QAAQC,aACxB,yBACElE,UAAU,aACVmE,IACEH,KAAKpF,MAAMqF,QAAQG,MACnB,wGAEFC,IAAKL,KAAKpF,MAAMqF,QAAQC,eAG5B,6BACE,uBAAGlE,UAAU,6BACVgE,KAAKpF,MAAMqF,QAAQK,mBAGxB,6BACE,uBAAGtE,UAAU,4BACVgE,KAAKpF,MAAMqF,QAAQM,iBAEtB,yBAAKvE,UAAU,qBACb,6BACE,0CACA,4BACGgE,KAAKpF,MAAMqF,QAAQO,aAAa3B,KAAI,SAAC4B,EAAY1B,GAAb,OACnC,wBAAIC,IAAKD,GAAI0B,QAInB,6BACE,0CACA,4BACGT,KAAKpF,MAAMqF,QAAQS,WAAW7B,KAAI,SAAC8B,EAAW5B,GAAZ,OACjC,wBAAIC,IAAKD,GAAI4B,SAKrB,uBAAG3E,UAAU,uBACVgE,KAAKpF,MAAMqF,QAAQW,aAAe,MAErC,uBAAG5E,UAAU,oBACVgE,KAAKpF,MAAMqF,QAAQY,UAAY,MAElC,uBAAG7E,UAAU,qBACVgE,KAAKpF,MAAMqF,QAAQa,WAAa,MAEnC,uBAAG9E,UAAU,0BACVgE,KAAKpF,MAAMqF,QAAQc,eAAiB,MAEvC,uBAAG/E,UAAU,mBACVgE,KAAKpF,MAAMqF,QAAQe,SAAW,QAOrC,6BACE,yD,GApE2BC,IAAMC,W,qDCc5B,SAASC,EAAQvG,GAAQ,IAC9BgB,EAAmBhB,EAAnBgB,KAAMwF,EAAaxG,EAAbwG,SACRvG,EAAUC,IAEhB,OACE,6BACE,kBAACuG,EAAA,EAAD,CACErF,UAAWnB,EAAQmC,KACnBsE,gBAAiB1G,EAAM0G,iBAEvB,kBAACC,EAAA,EAAD,CACEC,WAAY,kBAAC,IAAD,MACZC,gBAAc,kBACd/D,GAAG,kBAEH,kBAACgE,EAAA,EAAD,CAAY1F,UAAWnB,EAAQ8G,SAAU/F,IAE3C,kBAACgG,EAAA,EAAD,KACE,wBAAI5F,UAAWnB,EAAQuG,UACpBA,EAASvC,KAAI,SAACoB,EAASlB,GAAV,OACZ,wBACEC,IAAKiB,EAAQ4B,IACb7F,UACEpB,EAAMkH,WAAa7B,EAAQ4B,IACvBhH,EAAQkH,gBACRlH,EAAQoF,QAEdb,QAAS,kBAAMxE,EAAMoH,WAAWZ,EAASrC,MAEzC,yBAAK/C,UAAWnB,EAAQoH,kBACtB,yBACEjG,UAAU,cACVmE,IACEF,EAAQG,MACR,wGAEFC,IAAKJ,EAAQC,cAEf,6BA7CEgC,EA6CajC,EAAQC,aA5C/BiC,OAAS,KACfD,EAAMA,EAAIE,MAAM,EAAG,IAAM,OAEpBF,KA2CO,6BACE,kBAAC,IAAD,QAhDlB,IAAoBA,SA2DpB,IAAMpH,EAAYiD,aAAW,SAAAC,GAAK,MAAK,CACrChB,KAAM,CACJuB,QAAS,EACT,mCAAoC,CAClCA,QAAS,IAIboD,QAAS,CACPU,SAAUrE,EAAMsE,WAAWC,QAAQ,IACnCC,WAAYxE,EAAMsE,WAAWG,mBAE/BrB,SAAU,CACRsB,UAAW,OACXnE,QAAS,EACTT,OAAQ,GAEVmC,QAAS,CACP0C,SAAU,IACVpE,QAAS,WACTsB,gBAAiB,UACjBJ,UAAW,2BACXmD,UAAW,oBACXvE,QAAS,OACTwE,eAAgB,gBAChBC,WAAY,SACZC,WAAY,qBACZ,QAAS,CACPpD,UAAW,iBACXxB,YAAa,GACb6E,QAAS,GAEX,UAAW,CACTnD,gBAAiB,UACjBD,WAAY,YACZqD,OAAQ,UACRF,WAAY,qBACZ,QAAS,CACPC,QAAS,KAIff,iBAAkB,CAChB5D,QAAS,OACTyE,WAAY,SACZD,eAAgB,eAChB5E,WAAY,GACZ0E,SAAU,IACV,MAAO,CACL1E,WAAY,GACZG,MAAO,IACP8E,UAAW,SAIfnB,gBAAiB,CACfY,SAAU,IACVpE,QAAS,WACTsB,gBAAiB,UACjBJ,UAAW,2BACXmD,UAAW,oBACXvE,QAAS,OACTwE,eAAgB,gBAChBC,WAAY,SACZC,WAAY,qBACZ,QAAS,CACPpD,UAAW,gBACXC,WAAY,kBACZzB,YAAa,IAEf,UAAW,CACT8E,OAAQ,UACR,QAAS,CACP9E,YAAa,U,kCCvIN,SAASgD,EAAQvG,GAC5B,IAAMC,EAAUC,IAEhB,OACI,yBAAKkB,UAAWnB,EAAQsI,QACpB,yBAAKnH,UAAWnB,EAAQuI,YACpB,kBAAC,IAAD,OAEJ,kBAACC,EAAA,EAAD,CACIC,YAAY,eACZ7F,SAAU7C,EAAM2I,SAChB1I,QAAS,CACLmC,KAAMnC,EAAQ2I,UACdC,MAAO5I,EAAQ6I,YAEnBC,WAAY,CAAE,aAAc,aAM5C,IAAM7I,EAAYiD,aAAW,SAAAC,GAAK,MAAK,CACnC4F,KAAM,CACFC,SAAU,GAEdV,OAAO,aACHW,SAAU,WACVtF,aAAcR,EAAM+F,MAAMvF,aAC1BqB,gBAAiBmE,YAAKhG,EAAMiG,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACPtE,gBAAiBmE,YAAKhG,EAAMiG,QAAQC,OAAOC,MAAO,MAEtDhG,YAAaH,EAAME,QAAQ,GAC3BD,WAAY,EACZG,MAAO,QACNJ,EAAMoG,YAAYC,GAAG,MAAQ,CAC1BjG,MAAO,SAGfgF,WAAY,CACRhF,MAAOJ,EAAME,QAAQ,GACrBwB,OAAQ,OACRoE,SAAU,WACVQ,cAAe,OACfjG,QAAS,OACTyE,WAAY,SACZD,eAAgB,UAEpBW,UAAW,CACPvG,MAAO,WAEXyG,WAAW,aACPnF,QAASP,EAAME,QAAQ,EAAG,EAAG,EAAG,GAChC0B,WAAY5B,EAAMuG,YAAYC,OAAO,SACrCpG,MAAO,QACNJ,EAAMoG,YAAYC,GAAG,MAAQ,CAC1BjG,MAAO,UCvDEqG,E,YACjB,WAAY7J,GAAQ,IAAD,8BACf,4CAAMA,KAWV2I,SAAW,SAAA7H,GACP,EAAKgJ,SAAS,CAAEC,YAAajJ,EAAMC,OAAOE,SAb3B,EAuBnBmG,WAAa,SAAA/B,GACT,EAAKyE,SAAS,CACVE,eACI,EAAK7E,MAAM6E,iBAAmB3E,EAAU,KAAOA,KAxBvD,EAAKF,MAAQ,CACT6E,eAAgB,KAChBxD,SAAU,IAJC,E,iFASfpB,KAAK6E,gB,oCAOM,IAAD,OACVzI,IAAM0I,IAAIxK,EAAU,YAAYgC,MAAK,SAAAC,GACjCM,QAAQK,IAAIX,EAASC,MACrB,EAAKkI,SAAS,CAAEtD,SAAU7E,EAASC,Y,+BAWjC,IACEoI,EAAmB5E,KAAKD,MAAxB6E,eACFG,EAAeH,EAAiBA,EAAe/C,IAAM,GAErDmD,EAAahF,KAAKD,MAAMqB,SAAS6D,QACnC,SAAAhF,GAAO,OACkB,oBAApBA,EAAQiF,SACoB,oBAAzBjF,EAAQkF,cACgB,oBAAxBlF,EAAQmF,eACO,IAAnBnF,EAAQoF,UAGVC,EAAQtF,KAAKD,MAAMqB,SAAS6D,QAAO,SAAAhF,GAAO,OAAIA,EAAQoF,UAEtDE,EAAiBvF,KAAKD,MAAMqB,SAAS6D,QACvC,SAAAhF,GAAO,OAAK+E,EAAWtK,SAASuF,KAAaA,EAAQoF,UAGzD,OACI,yBAAKrJ,UAAU,YACX,yBAAKA,UAAU,WACX,kBAAC,EAAD,CAAauH,SAAUvD,KAAKuD,WAC5B,kBAACpC,EAAD,CACIG,iBAAe,EACfU,WAAYhC,KAAKgC,WACjBF,SAAUiD,EACV3D,SAAU4D,EACVpJ,KAAK,kBAET,kBAACuF,EAAD,CACIa,WAAYhC,KAAKgC,WACjBF,SAAUiD,EACV3D,SAAUkE,EACV1J,KAAK,UAET,kBAACuF,EAAD,CACIa,WAAYhC,KAAKgC,WACjBF,SAAUiD,EACV3D,SAAUmE,EACV3J,KAAK,uBAGb,kBAAC,EAAD,CAASqE,QAASD,KAAKD,MAAM6E,sB,GAzEP3D,IAAMC,W,gsBCY7B,SAASsE,KACpB,IAAM3K,EAAUC,KADoB,EAEVC,mBAAS,CAC/BmF,YAAa,GACbI,iBAAkB,GAClBC,gBAAiB,GACjBS,QAAS,GACToE,YAAa,GACbD,aAAc,GACdM,aAAc,GACdC,gBAAiB,GACjBjF,WAAY,GACZE,UAAW,GACXgF,uBAAwB,GACxB9E,SAAU,KAdsB,mBAE7B4C,EAF6B,KAEtBmC,EAFsB,OAiBR7K,oBAAS,GAjBD,mBAiB7BsK,EAjB6B,aAkBItK,oBAAS,IAlBb,mBAkB7B8K,EAlB6B,KAkBfC,EAlBe,OAmBA/K,mBAAS,IAnBT,mBAmB7B2F,EAnB6B,KAmBjBqF,EAnBiB,OAoBIhL,mBAAS,IApBb,mBAoB7ByF,EApB6B,KAoBfwF,EApBe,OAqB0BjL,mBAAS,IArBnC,mBAqB7BkL,EArB6B,KAqBJC,EArBI,OAsBFnL,mBAAS,IAtBP,mBAsB7BoL,EAtB6B,KAsBlBC,EAtBkB,OAuBVrL,mBAAS,MAvBC,mBAuB7BsL,EAvB6B,KAuBtBC,EAvBsB,OAwBFvL,qBAxBE,mBAwB7BwL,EAxB6B,KAwBlBC,EAxBkB,OAyBMzL,oBAAS,GAzBf,mBAyB7B0L,EAzB6B,KAyBdC,GAzBc,KA2B5BnL,GAAoBC,wBAApBD,gBAER,SAASE,GAAaC,GAClBkK,EAAS,MACFnC,EADC,eAEH/H,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAuC1C,SAAS8K,GAAgBC,GACrBb,EAAcrF,EAAWuE,QAAO,SAACtE,EAAW5B,GAAZ,OAAkB6H,IAAU7H,MAGhE,SAAS8H,GAAiBD,GACtBZ,EAAgBxF,EAAayE,QAAO,SAACxE,EAAY1B,GAAb,OAAmB6H,IAAU7H,MAGrE,SAAS+H,GAAeF,GACpBR,EAAaD,EAAUlB,QAAO,SAACpE,EAAU9B,GAAX,OAAiB6H,IAAU7H,MAG7D,SAASgI,GAA6BH,GAClCV,EACID,EAAwBhB,QACpB,SAACU,EAAwB5G,GAAzB,OAA+B6H,IAAU7H,MAkGrD,SAASiI,GAAqBtL,GACR,UAAdA,EAAMsD,KACNtD,EAAMS,iBAId,SAAS8K,GAAQvL,GACb,GAAkB,UAAdA,EAAMsD,IAAiB,CACvBtD,EAAMS,iBADiB,IAGnBwE,EAIA8C,EAJA9C,UACAF,EAGAgD,EAHAhD,WACAkF,EAEAlC,EAFAkC,uBACA9E,EACA4C,EADA5C,SAGJ,OAAQnF,EAAMC,OAAOC,MACjB,IAAK,aA7JjB,SAAsB+E,GACbA,IACLoF,EAAc,GAAD,mBAAKrF,GAAL,CAAiBC,KAC9BiF,EAAS,MAAKnC,EAAN,CAAa9C,UAAW,OA2JpBuG,CAAavG,GACb,MACJ,IAAK,cA1JjB,SAAuBF,GACdA,IACLuF,EAAgB,GAAD,mBAAKxF,GAAL,CAAmBC,KAClCmF,EAAS,MAAKnC,EAAN,CAAahD,WAAY,OAwJrB0G,CAAc1G,GACd,MACJ,IAAK,0BAjJjB,SAAmCkF,GAC1BA,IACLO,EAA2B,GAAD,mBACnBD,GADmB,CAEtBN,KAEJC,EAAS,MAAKnC,EAAN,CAAakC,uBAAwB,OA4IjCyB,CAA0BzB,GAC1B,MACJ,IAAK,YA1JjB,SAAqB9E,GACZA,IACLuF,EAAa,GAAD,mBAAKD,GAAL,CAAgBtF,KAC5B+E,EAAS,MAAKnC,EAAN,CAAa5C,SAAU,OAwJnBwG,CAAYxG,GACZ,MACJ,QACIhE,QAAQK,IAAI,iBAIxB,GAAkB,cAAdxB,EAAMsD,MAAwBtD,EAAMC,OAAOE,MAC3C,OAAQH,EAAMC,OAAOC,MACjB,IAAK,YACD+K,GAAgBjG,EAAWyB,OAAS,GACpC,MACJ,IAAK,aACD0E,GAAiBrG,EAAa2B,OAAS,GACvC,MACJ,IAAK,yBACD4E,GACId,EAAwB9D,OAAS,GAErC,MACJ,IAAK,WACD2E,GAAeX,EAAUhE,OAAS,GAClC,MACJ,QACItF,QAAQK,IAAI,iBAK5B,OACI,yBAAKlB,UAAWnB,EAAQmC,MACpB,wBAAIhB,UAAU,yBAAd,mBACA,0BACIA,UAAWnB,EAAQoB,KACnBqL,YAAU,EACVzJ,aAAa,MACb3B,SA1IZ,SAAuBR,GACnBA,EAAMS,iBACN,IAAM8D,EAAUwD,EAChBxD,EAAQoF,OAASA,EACjBpF,EAAQ4F,aAAeA,EACvB5F,EAAQO,aAAeA,EACvBP,EAAQS,WAAaA,EACrBT,EAAQkG,UAAYA,EACpBlG,EAAQgG,wBAA0BA,SAC3BhG,EAAQQ,kBACRR,EAAQU,iBACRV,EAAQ0F,8BACR1F,EAAQY,SAEfhE,QAAQK,IAAI+C,GAEZ,IAAMsH,EAAW,IAAIC,SACjBjB,GACAgB,EAASE,OAAO,QAASlB,EAAWA,EAAUmB,UAElDtL,IACKC,KAAK/B,EAAU,cAAeiN,GAC9BjL,MAAK,SAAAC,GACFM,QAAQK,IAAIX,GACY,MAApBA,EAASoL,QACT1H,EAAQG,KAAO9F,EAAUiC,EAASC,KAClCJ,IACKC,KAAK/B,EAAU,aAAc2F,GAC7B3D,MAAK,SAAAC,GACFM,QAAQK,IAAIX,GACZhB,GAAgB,iBAAkB,CAC9BmB,QAAS,UACTW,aAAc,CACVC,SAAU,MACVC,WAAY,eAIvBZ,OAAM,SAAAC,GACHC,QAAQK,IAAIN,GACZrB,GAAgB,2BAA4B,CACxCmB,QAAS,QACTW,aAAc,CACVC,SAAU,MACVC,WAAY,gBAK5BhC,GAAgB,2BAA4B,CACxCmB,QAAS,QACTW,aAAc,CACVC,SAAU,MACVC,WAAY,eAK3BZ,OAAM,SAAAC,GACHC,QAAQD,MAAMA,GACdrB,GAAgB,2BAA4B,CACxCmB,QAAS,QACTW,aAAc,CACVC,SAAU,MACVC,WAAY,iBA4EpB,kBAACqK,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAAS5J,QAAS,GACxC,kBAAC0J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIhM,UAAWnB,EAAQoN,YAClC,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIC,QAASxC,EACTpI,SAvNhC,SAAgC/B,GAC5BoK,GAAiBD,MAyNGjK,KAAK,aACL+B,MAAM,gBACN2K,eAAe,QACfC,WAAS,KAGjB,kBAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIhM,UAAWnB,EAAQoN,YAClC,kBAACO,EAAA,EAAD,CAAaD,WAAS,GAClB,kBAAC/K,EAAA,EAAD,CACIC,SAAUhC,GACVgN,UAAWzB,GACXnL,MAAO4H,EAAM7H,KACbA,KAAK,cACL+B,MAAM,WAIlB,kBAACiK,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIhM,UAAWnB,EAAQoN,YAClC,kBAACO,EAAA,EAAD,CAAaD,WAAS,GAClB,kBAAC/K,EAAA,EAAD,CACIC,SAAUhC,GACVgN,UAAWzB,GACX0B,WAAS,EACT9M,KAAK,mBACL+B,MAAM,oBACN9B,MAAO4H,EAAMnD,qBAKzB,kBAACsH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIhM,UAAWnB,EAAQoN,YAClC,kBAACO,EAAA,EAAD,CAAaD,WAAS,GAClB,kBAACI,GAAA,EAAD,CAAYC,QAAQ,iCAApB,oBAGA,kBAACC,GAAA,EAAD,CACInL,GAAG,gCACH9B,KAAK,kBACLC,MAAO4H,EAAMiC,gBACbjI,SAAUhC,IAEV,kBAACqN,GAAA,EAAD,CAAUjN,MAAO,GAAjB,YACA,kBAACiN,GAAA,EAAD,CAAUjN,MAAO,GAAjB,qBACA,kBAACiN,GAAA,EAAD,CAAUjN,MAAO,GAAjB,gBACA,kBAACiN,GAAA,EAAD,CAAUjN,MAAO,GAAjB,uBAGA,kBAACiN,GAAA,EAAD,CAAUjN,MAAO,GAAjB,gBACA,kBAACiN,GAAA,EAAD,CAAUjN,MAAO,GAAjB,qBACA,kBAACiN,GAAA,EAAD,CAAUjN,MAAO,GAAjB,iBAIZ,kBAAC+L,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIhM,UAAWnB,EAAQoN,YAClC,kBAACO,EAAA,EAAD,CAAaD,WAAS,GAClB,kBAAC/K,EAAA,EAAD,CACIkL,WAAS,EACTjL,SAAUhC,GACVG,KAAK,kBACL+B,MAAM,mBACN9B,MAAO4H,EAAMlD,oBAIzB,kBAACqH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIhM,UAAWnB,EAAQoN,YAClC,kBAACO,EAAA,EAAD,CAAaD,WAAS,GAClB,kBAAC/K,EAAA,EAAD,CACIC,SAAUhC,GACVgN,UAAWzB,GACXpL,KAAK,eACL+B,MAAM,gBACN9B,MAAO4H,EAAM0B,iBAIzB,kBAACyC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIhM,UAAWnB,EAAQoN,YAClC,kBAACO,EAAA,EAAD,CAAaD,WAAS,GAClB,kBAAC/K,EAAA,EAAD,CACIC,SAAUhC,GACVgN,UAAWzB,GACXnL,MAAO4H,EAAM2B,YACbxJ,KAAK,cACL+B,MAAM,mBAIlB,kBAACiK,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIhM,UAAWnB,EAAQoN,YAClC,kBAACO,EAAA,EAAD,CAAaD,WAAS,GAClB,kBAAC/K,EAAA,EAAD,CACIC,SAAUhC,GACVgN,UAAWzB,GACXpL,KAAK,eACL+B,MAAM,gBACN9B,MAAO4H,EAAMgC,iBAIzB,kBAACmC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIhM,UAAWnB,EAAQoN,YAClC,kBAACO,EAAA,EAAD,CAAaD,WAAS,GAClB,kBAAC/K,EAAA,EAAD,CACIC,SAAUhC,GACVgN,UAAWzB,GACXpL,KAAK,UACL+B,MAAM,UACN9B,MAAO4H,EAAMzC,YAIzB,kBAAC4G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIhM,UAAWnB,EAAQoN,YAClC,6BACI,kBAACO,EAAA,EAAD,CAAaD,WAAS,GAClB,kBAAC/K,EAAA,EAAD,CACIC,SAAUhC,GACVG,KAAK,aACL+B,MAAM,eACN8K,UAAWxB,GACXpL,MAAO4H,EAAMhD,gBAK7B,kBAACmH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIe,MAAO,CAAExK,QAAS,MACjC,yBAAKvC,UAAWnB,EAAQmO,eACnBxI,EAAa3B,KAAI,SAAC4B,EAAY1B,GAAb,OACd,kBAACkK,EAAA,EAAD,CACIjK,IAAKD,EACLpB,MAAO8C,EACPyI,SAAU,kBAAMrC,GAAiB9H,IACjC/C,UAAWnB,EAAQsO,YAKnC,kBAACvB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIhM,UAAWnB,EAAQoN,YAClC,6BACI,kBAACO,EAAA,EAAD,CAAaD,WAAS,GAClB,kBAAC/K,EAAA,EAAD,CACIC,SAAUhC,GACVG,KAAK,YACL+B,MAAM,aACN8K,UAAWxB,GACXpL,MAAO4H,EAAM9C,eAK7B,kBAACiH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,yBAAKhM,UAAWnB,EAAQmO,eACnBtI,EAAW7B,KAAI,SAAC8B,EAAW5B,GAAZ,OACZ,kBAACkK,EAAA,EAAD,CACIjK,IAAKD,EACLpB,MAAOgD,EACPuI,SAAU,kBAAMvC,GAAgB5H,IAChC/C,UAAWnB,EAAQsO,YAKnC,kBAACvB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIhM,UAAWnB,EAAQoN,YAClC,6BACI,kBAACO,EAAA,EAAD,CAAaD,WAAS,GAClB,kBAAC/K,EAAA,EAAD,CACIC,SAAUhC,GACVG,KAAK,yBACL+B,MAAM,0BACN8K,UAAWxB,GACXpL,MAAO4H,EAAMkC,4BAK7B,kBAACiC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIe,MAAO,CAAExK,QAAS,MACjC,yBAAKvC,UAAWnB,EAAQmO,eACnB/C,EAAwBpH,KACrB,SAAC8G,EAAwB5G,GAAzB,OACI,kBAACkK,EAAA,EAAD,CACIjK,IAAKD,EACLpB,MAAOgI,EACPuD,SAAU,kBACNnC,GAA6BhI,IAEjC/C,UAAWnB,EAAQsO,YAMvC,kBAACvB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIhM,UAAWnB,EAAQoN,YAClC,6BACI,kBAACO,EAAA,EAAD,CAAaD,WAAS,GAClB,kBAAC/K,EAAA,EAAD,CACIC,SAAUhC,GACVG,KAAK,WACL+B,MAAM,WACN8K,UAAWxB,GACXpL,MAAO4H,EAAM5C,cAK7B,kBAAC+G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,yBAAKhM,UAAWnB,EAAQmO,eACnB7C,EAAUtH,KAAI,SAACgC,EAAU9B,GAAX,OACX,kBAACkK,EAAA,EAAD,CACIjK,IAAKD,EACLpB,MAAOkD,EACPqI,SAAU,kBAAMpC,GAAe/H,IAC/B/C,UAAWnB,EAAQsO,YAKnC,kBAACvB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIhM,UAAWnB,EAAQuO,YAClC,wBAAIpN,UAAWnB,EAAQwO,UAAvB,OAEI,kBAACC,GAAA,EAAD,CACIC,aAAW,SACXnK,QAnX5B,WACIsH,IAAkBD,GAClBH,EAAS,OAkXetK,UACIyK,EACM5L,EAAQ2O,UACR3O,EAAQ4O,cAGlB,kBAAC,IAAD,QAIR,2BACIC,OAAO,UACP1N,UAAWnB,EAAQ4I,MACnB/F,GAAG,wBACHiM,UAAQ,EACR5M,KAAK,OACLU,SAjZxB,SAAkB/B,GAId,GAHAgL,IAAkBD,GAGd/K,EAAMC,OAAOiO,OAASlO,EAAMC,OAAOiO,MAAM,GAAI,CAC7C,IAAMC,EAAS,IAAIC,WACnBtD,EAAa9K,EAAMC,OAAOiO,MAAM,IAChCC,EAAOE,OAAS,SAAAC,GAAC,OAAI1D,EAAS0D,EAAErO,OAAOsO,SAEvCJ,EAAOK,cAAcxO,EAAMC,OAAOiO,MAAM,QA0Y5B,2BACIhB,QAAQ,wBACR5M,UACIyK,EACM5L,EAAQsP,WACRtP,EAAQ2O,WAGlB,kBAAC1M,EAAA,EAAD,CACIJ,QAAQ,YACRO,MAAM,UACN0D,UAAU,OACVyJ,UAAW,kBAAC,IAAD,OAJf,WASJ,yBACIpO,UACIyK,EACM5L,EAAQ2O,UACR3O,EAAQsP,WAElBhK,IAAKkG,EACLhG,IAAI,OAIhB,kBAACuH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIe,MAAO,CAAEjL,OAAQ,SAChC,kBAAChB,EAAA,EAAD,CACIJ,QAAQ,YACRK,KAAK,SACLgM,MAAO,CAAEsB,UAAW,SAHxB,aAapB,IAAMvP,GAAYiD,aAAW,SAAAC,GAAK,MAAK,CACnChB,KAAM,CACFsN,SAAU,MACVxM,OAAQ,YACR2B,UAAW,0BACXlB,QAAS,OACTC,aAAc,OACdqB,gBAAiB,SAErB5D,KAAM,GACNkN,KAAM,CACFrL,OAAQE,EAAME,QAAQ,KAE1B8K,cAAe,CACXuB,UAAW,QAEfC,KAAM,CACFnM,QAAS,OACTwE,eAAgB,gBAEpBY,MAAO,CACHpF,QAAS,QAEbgL,SAAU,CACNvF,SAAU,WACV2G,WAAY,SACZjI,WAAY,IACZkI,UAAW,SACX5M,OAAQ,QAEZqM,WAAY,CACRQ,UAAW,QACXL,SAAU,OACVxM,OAAQ,QAEZ0L,UAAW,CACPoB,WAAY,WACZ9G,SAAU,YAEdmE,WAAY,CACRoC,UAAW,OACXQ,aAAc,OACd5M,WAAY,MACZE,YAAa,OAEjBiL,WAAY,GACZK,aAAc,CACV3F,SAAU,WACVgH,MAAO,MACPvM,QAAS,IACT8L,UAAW,WCplBnBjO,IAAM2O,SAASC,iBAAkB,EAgElBC,OA9Df,WAAgB,IAAD,EAC6BlQ,mBAAS,CACjDgB,MAAO,GACPU,UAAW,KACXb,KAAM,KAJK,mBACNE,EADM,KACST,EADT,KAkBb,SAAS6P,IACP9O,IACG0I,IAAIxK,EAAU,WACdgC,MAAK,SAAAC,GAAa,IAAD,EACmBA,EAASC,KAApCT,EADQ,EACRA,MAAOH,EADC,EACDA,KAAMa,EADL,EACKA,UACjBV,GAASU,GACXpB,EAAiB,CAAEU,QAAOH,OAAMa,iBAGnCE,OAAM,SAAAC,GACLC,QAAQD,MAAMA,MAIpB,OAnBAuO,qBAAU,WACRD,IACAE,YAAYF,EAAe,OAC1B,IAiBD,yBAAKlP,UAAU,OACb,kBAAC,mBAAD,CAAkBqP,kBAAgB,EAACC,SAAU,GAC3C,kBAAC,IAAD,KACE,kBAAC7M,EAAD,CACEG,MA9BI,CACZ,CAAEhD,KAAM,OAAQsD,IAAK,KACrB,CAAEtD,KAAM,WAAYsD,IAAK,YACzB,CAAEtD,KAAM,iBAAkBsD,IAAK,mBA4BvBpD,cAAeA,EACfT,iBAAkBA,IAEpB,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkQ,OAAK,EAACC,KAAK,KAChB,6BACE,qCAGJ,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,mBACV,kBAAChG,GAAD,aCnDIiG,QACW,cAA7BlR,OAAOC,SAASkR,UAEe,UAA7BnR,OAAOC,SAASkR,UAEhBnR,OAAOC,SAASkR,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5P,MAAK,SAAA6P,GACjCA,EAAaC,kB","file":"static/js/main.c1f661b2.chunk.js","sourcesContent":["const API_URL = window.location.host.includes(\"localhost\") ? \"http://localhost:8080/\" : \"http://nodejs-mongo-persistent-tuhlari.rahtiapp.fi/\"\r\n\r\nexport default API_URL;","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport API_URL from \"../js/api\";\r\n\r\nexport default function Login(props) {\r\n    const classes = useStyles();\r\n    const [credentials, setCredentials] = useState({ user: \"\", password: \"\" });\r\n    const { isOpen, setAuthorization, close } = props;\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    function handleChange(event) {\r\n        setCredentials({\r\n            ...credentials,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    function login(event) {\r\n        event.preventDefault();\r\n        console.log(credentials);\r\n        axios\r\n            .post(\r\n                API_URL + \"login\",\r\n                {},\r\n                {\r\n                    auth: {\r\n                        username: credentials.user,\r\n                        password: credentials.password\r\n                    }\r\n                }\r\n            )\r\n            .then(response => {\r\n                const { email, name, userGroup } = response.data;\r\n                if (email && userGroup) {\r\n                    setAuthorization({ email, name, userGroup });\r\n                    setCredentials({ user: \"\", password: \"\" });\r\n                    enqueueSnackbar(\"Successfully logged in\", {\r\n                        variant: \"success\",\r\n                        anchorOrigin: {\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"center\"\r\n                        }\r\n                    });\r\n                    close();\r\n                } else {\r\n                    enqueueSnackbar(\"Failed to login\", {\r\n                        variant: \"error\",\r\n                        anchorOrigin: {\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"center\"\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n\r\n            .catch(error => {\r\n                console.error(error);\r\n                enqueueSnackbar(\"Failed to login\", {\r\n                    variant: \"error\",\r\n                    anchorOrigin: {\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"center\"\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    function logout(event) {\r\n        event.preventDefault();\r\n        axios\r\n            .post(API_URL + \"logout\")\r\n            .then(response => {\r\n                const { email, name, userGroup } = response.data;\r\n                setAuthorization({ email, name, userGroup });\r\n                enqueueSnackbar(\"Successfully logged out\", { variant: \"info\" });\r\n                close();\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    if (props.authorization.email) {\r\n        return (\r\n            <div className={isOpen ? \"login login-open\" : \"login login-closed\"}>\r\n                <form className={classes.form} onSubmit={logout}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        className={classes.root}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Logout\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={isOpen ? \"login login-open\" : \"login login-closed\"}>\r\n                <form className={classes.form} onSubmit={login}>\r\n                    <TextField\r\n                        onChange={handleChange}\r\n                        id=\"standard-password-input\"\r\n                        label=\"Username\"\r\n                        name=\"user\"\r\n                        className={classes.textField}\r\n                        autoComplete=\"current-password\"\r\n                        margin=\"normal\"\r\n                        value={credentials.user}\r\n                    />\r\n\r\n                    <TextField\r\n                        onChange={handleChange}\r\n                        id=\"standard-password-input\"\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        className={classes.textField}\r\n                        type=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        margin=\"normal\"\r\n                        value={credentials.password}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        className={classes.root}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: \"1rem\",\r\n        borderRadius: \"1.5rem\"\r\n    }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Login from \"./Login\";\r\nimport KeyboardArrowDown from \"@material-ui/icons/KeyboardArrowDown\";\r\n\r\nexport default function Nav(props) {\r\n  const classes = useStyles();\r\n  const [isLoginOpen, setIsLoginOpen] = useState(false);\r\n  const { authorization, setAuthorization } = props;\r\n\r\n  function openCloseLoginWindow() {\r\n    setIsLoginOpen(!isLoginOpen);\r\n  }\r\n\r\n  return (\r\n    <nav className=\"nav-bar\">\r\n      <ul>\r\n        {props.links.map((link, i) => (\r\n          <li key={i}>\r\n            <Link to={link.url}>\r\n              <Button className={classes.button}>{link.name}</Button>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <Button\r\n        onClick={openCloseLoginWindow}\r\n        color=\"primary\"\r\n        className={classes.button}\r\n      >\r\n        {authorization.email ? \"Logged in\" : \"Login\"}{\" \"}\r\n        <KeyboardArrowDown\r\n          className={isLoginOpen ? classes.loginIconUp : classes.loginIconDown}\r\n        />\r\n      </Button>\r\n      <Login\r\n        isOpen={isLoginOpen}\r\n        close={() => setIsLoginOpen(false)}\r\n        setAuthorization={setAuthorization}\r\n        authorization={authorization}\r\n      />\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: \"black\",\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n    color: \"white\",\r\n    height: 48,\r\n    padding: \"0 30px\"\r\n  },\r\n  loginIconUp: {\r\n    transform: \"rotate(-180deg)\",\r\n    transition: \"all 0.25s\"\r\n  },\r\n  loginIconDown: {\r\n    transition: \"all 0.25s\",\r\n    transform: \"rotate(0deg)\"\r\n  },\r\n  button: {\r\n    color: \"white\",\r\n    marginRight: \"20px\",\r\n    padding: \"10px 10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"a90018\"\r\n    }\r\n  }\r\n});\r\n","import React from \"react\";\r\n\r\nexport default class Product extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    if (this.props.product) {\r\n      return (\r\n        <div className=\"product\">\r\n          <div className=\"product-header\">\r\n            <h1>{this.props.product.productName}</h1>\r\n            <img\r\n              className=\"logo-large\"\r\n              src={\r\n                this.props.product.logo ||\r\n                \"https://image.shutterstock.com/image-vector/ui-image-placeholder-wireframes-apps-260nw-1037719204.jpg\"\r\n              }\r\n              alt={this.props.product.productName}\r\n            ></img>\r\n          </div>\r\n          <div>\r\n            <p className=\"product-short-description\">\r\n              {this.props.product.shortDescription}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <p className=\"product-long-description\">\r\n              {this.props.product.longDescription}\r\n            </p>\r\n            <div className=\"product-info-list\">\r\n              <div>\r\n                <p>Teknologiat</p>\r\n                <ul>\r\n                  {this.props.product.technologies.map((technology, i) => (\r\n                    <li key={i}>{technology}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              <div>\r\n                <p>Komponentit</p>\r\n                <ul>\r\n                  {this.props.product.components.map((component, i) => (\r\n                    <li key={i}>{component}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <p className=\"product-requirement\">\r\n              {this.props.product.requirement || null}\r\n            </p>\r\n            <p className=\"product-customer\">\r\n              {this.props.product.customer || null}\r\n            </p>\r\n            <p className=\"product-lifecycle\">\r\n              {this.props.product.lifecycle || null}\r\n            </p>\r\n            <p className=\"product-business-owner\">\r\n              {this.props.product.businessOwner || null}\r\n            </p>\r\n            <p className=\"product-pricing\">\r\n              {this.props.product.pricing || null}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <p>Please select an item</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction trimString(str) {\r\n  if (str.length > 24) {\r\n    str = str.slice(0, 24) + \"...\";\r\n  }\r\n  return str;\r\n}\r\n\r\nexport default function Sidebar(props) {\r\n  const { name, products } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <ExpansionPanel\r\n        className={classes.root}\r\n        defaultExpanded={props.defaultExpanded}\r\n      >\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>{name}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <ul className={classes.products}>\r\n            {products.map((product, i) => (\r\n              <li\r\n                key={product._id}\r\n                className={\r\n                  props.selected === product._id\r\n                    ? classes.productSelected\r\n                    : classes.product\r\n                }\r\n                onClick={() => props.setProduct(products[i])}\r\n              >\r\n                <div className={classes.productContainer}>\r\n                  <img\r\n                    className=\"logo-normal\"\r\n                    src={\r\n                      product.logo ||\r\n                      \"https://image.shutterstock.com/image-vector/ui-image-placeholder-wireframes-apps-260nw-1037719204.jpg\"\r\n                    }\r\n                    alt={product.productName}\r\n                  />\r\n                  <p>{trimString(product.productName)}</p>\r\n                </div>\r\n                <div>\r\n                  <ExpandMoreIcon />\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: 0,\r\n    \"& .MuiExpansionPanelDetails-root\": {\r\n      padding: 0\r\n    }\r\n  },\r\n\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular\r\n  },\r\n  products: {\r\n    listStyle: \"none\",\r\n    padding: 0,\r\n    margin: 0\r\n  },\r\n  product: {\r\n    minWidth: 300,\r\n    padding: \"0.5rem 0\",\r\n    backgroundColor: \"#f5f5f5\",\r\n    boxShadow: \"1px 5px 10px 1px #c5c5c5\",\r\n    borderTop: \"1px solid #c9c9c9\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    borderLeft: \"10px solid #cfcfcf\",\r\n    \"& svg\": {\r\n      transform: \"rotate(-90deg)\",\r\n      marginRight: 10,\r\n      opacity: 0\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: \"#e4e4e4\",\r\n      transition: \"all 250ms\",\r\n      cursor: \"pointer\",\r\n      borderLeft: \"10px solid #989898\",\r\n      \"& svg\": {\r\n        opacity: 1\r\n      }\r\n    }\r\n  },\r\n  productContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    marginLeft: 10,\r\n    minWidth: 130,\r\n    \"& p\": {\r\n      marginLeft: 20,\r\n      width: 200,\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n\r\n  productSelected: {\r\n    minWidth: 300,\r\n    padding: \"0.5rem 0\",\r\n    backgroundColor: \"#dbdbdb\",\r\n    boxShadow: \"1px 5px 10px 1px #c5c5c5\",\r\n    borderTop: \"1px solid #c9c9c9\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    borderLeft: \"10px solid #d8001f\",\r\n    \"& svg\": {\r\n      transform: \"rotate(90deg)\",\r\n      transition: \"transform 200ms\",\r\n      marginRight: 10\r\n    },\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n      \"& svg\": {\r\n        marginRight: 10\r\n      }\r\n    }\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default function Sidebar(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n                placeholder=\"Search…\"\r\n                onChange={props.onSearch}\r\n                classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput\r\n                }}\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    search: {\r\n        position: \"relative\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        \"&:hover\": {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25)\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: \"auto\"\r\n        }\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    inputRoot: {\r\n        color: \"inherit\"\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create(\"width\"),\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: 200\r\n        }\r\n    }\r\n}));\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Product from \"./Product\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport SearchField from \"./SearchField\";\r\nimport API_URL from \"../js/api\";\r\n\r\nexport default class Products extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentProduct: null,\r\n            products: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProducts();\r\n    }\r\n\r\n    onSearch = event => {\r\n        this.setState({ searchQuery: event.target.value });\r\n    };\r\n\r\n    getProducts() {\r\n        axios.get(API_URL + \"products\").then(response => {\r\n            console.log(response.data);\r\n            this.setState({ products: response.data });\r\n        });\r\n    }\r\n\r\n    setProduct = product => {\r\n        this.setState({\r\n            currentProduct:\r\n                this.state.currentProduct === product ? null : product\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { currentProduct } = this.state;\r\n        const selectedItem = currentProduct ? currentProduct._id : \"\";\r\n\r\n        const myProducts = this.state.products.filter(\r\n            product =>\r\n                (product.creator === \"admin@admin.com\" ||\r\n                    product.productOwner === \"admin@admin.com\" ||\r\n                    product.salesPerson === \"admin@admin.com\") &&\r\n                product.isIdea === false\r\n        );\r\n\r\n        const ideas = this.state.products.filter(product => product.isIdea);\r\n\r\n        const publicProducts = this.state.products.filter(\r\n            product => !myProducts.includes(product) && !product.isIdea\r\n        );\r\n\r\n        return (\r\n            <div className=\"products\">\r\n                <div className=\"sidebar\">\r\n                    <SearchField onSearch={this.onSearch} />\r\n                    <Sidebar\r\n                        defaultExpanded\r\n                        setProduct={this.setProduct}\r\n                        selected={selectedItem}\r\n                        products={myProducts}\r\n                        name=\"Omat tuotteet\"\r\n                    />\r\n                    <Sidebar\r\n                        setProduct={this.setProduct}\r\n                        selected={selectedItem}\r\n                        products={ideas}\r\n                        name=\"Ideat\"\r\n                    />\r\n                    <Sidebar\r\n                        setProduct={this.setProduct}\r\n                        selected={selectedItem}\r\n                        products={publicProducts}\r\n                        name=\"Julkiset tuotteet\"\r\n                    />\r\n                </div>\r\n                <Product product={this.state.currentProduct} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport AddAPhoto from \"@material-ui/icons/AddAPhoto\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { MenuItem, Snackbar } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport API_URL from \"../js/api\";\r\n\r\nexport default function CreateProduct() {\r\n    const classes = useStyles();\r\n    const [input, setInput] = useState({\r\n        productName: \"\",\r\n        shortDescription: \"\",\r\n        longDescription: \"\",\r\n        pricing: \"\",\r\n        salesPerson: \"\",\r\n        productOwner: \"\",\r\n        businessType: \"\",\r\n        lifecycleStatus: \"\",\r\n        technology: \"\",\r\n        component: \"\",\r\n        environmentRequirement: \"\",\r\n        customer: \"\"\r\n    });\r\n\r\n    const [isIdea, setIsIdea] = useState(false);\r\n    const [isClassified, setIsClassified] = useState(false);\r\n    const [components, setComponents] = useState([]);\r\n    const [technologies, setTechnologies] = useState([]);\r\n    const [environmentRequirements, setEnvironmentRequirements] = useState([]);\r\n    const [customers, setCustomers] = useState([]);\r\n    const [image, setImage] = useState(null);\r\n    const [imageFile, setImageFile] = useState();\r\n    const [imageIshidden, setImageIsHidden] = useState(true);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    function handleChange(event) {\r\n        setInput({\r\n            ...input,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    function handleIdeaSwitch(event) {\r\n        setIsIdea(!isIdea);\r\n    }\r\n\r\n    function handleClassifiedSwitch(event) {\r\n        setIsClassified(!isClassified);\r\n    }\r\n\r\n    function addComponent(component) {\r\n        if (!component) return;\r\n        setComponents([...components, component]);\r\n        setInput({ ...input, component: \"\" });\r\n    }\r\n\r\n    function addTechnology(technology) {\r\n        if (!technology) return;\r\n        setTechnologies([...technologies, technology]);\r\n        setInput({ ...input, technology: \"\" });\r\n    }\r\n\r\n    function addCustomer(customer) {\r\n        if (!customer) return;\r\n        setCustomers([...customers, customer]);\r\n        setInput({ ...input, customer: \"\" });\r\n    }\r\n\r\n    function addEnvironmentRequirement(environmentRequirement) {\r\n        if (!environmentRequirement) return;\r\n        setEnvironmentRequirements([\r\n            ...environmentRequirements,\r\n            environmentRequirement\r\n        ]);\r\n        setInput({ ...input, environmentRequirement: \"\" });\r\n    }\r\n\r\n    function deleteComponent(index) {\r\n        setComponents(components.filter((component, i) => index !== i));\r\n    }\r\n\r\n    function deleteTechnology(index) {\r\n        setTechnologies(technologies.filter((technology, i) => index !== i));\r\n    }\r\n\r\n    function deleteCustomer(index) {\r\n        setCustomers(customers.filter((customer, i) => index !== i));\r\n    }\r\n\r\n    function deleteEnvironmentRequirement(index) {\r\n        setEnvironmentRequirements(\r\n            environmentRequirements.filter(\r\n                (environmentRequirement, i) => index !== i\r\n            )\r\n        );\r\n    }\r\n\r\n    function onUpload(event) {\r\n        setImageIsHidden(!imageIshidden);\r\n        // console.log(event);\r\n\r\n        if (event.target.files && event.target.files[0]) {\r\n            const reader = new FileReader();\r\n            setImageFile(event.target.files[0]);\r\n            reader.onload = e => setImage(e.target.result);\r\n\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    function removeImage() {\r\n        setImageIsHidden(!imageIshidden);\r\n        setImage(null);\r\n    }\r\n\r\n    function submitProduct(event) {\r\n        event.preventDefault();\r\n        const product = input;\r\n        product.isIdea = isIdea;\r\n        product.isClassified = isClassified;\r\n        product.technologies = technologies;\r\n        product.components = components;\r\n        product.customers = customers;\r\n        product.environmentRequirements = environmentRequirements;\r\n        delete product.technology;\r\n        delete product.component;\r\n        delete product.environmentRequirement;\r\n        delete product.customer;\r\n\r\n        console.log(product);\r\n\r\n        const formData = new FormData();\r\n        if (imageFile) {\r\n            formData.append(\"image\", imageFile, imageFile.filename);\r\n        }\r\n        axios\r\n            .post(API_URL + \"uploadImage\", formData)\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.status === 200) {\r\n                    product.logo = API_URL + response.data;\r\n                    axios\r\n                        .post(API_URL + \"addProduct\", product)\r\n                        .then(response => {\r\n                            console.log(response);\r\n                            enqueueSnackbar(\"Product added!\", {\r\n                                variant: \"success\",\r\n                                anchorOrigin: {\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"center\"\r\n                                }\r\n                            });\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error);\r\n                            enqueueSnackbar(\"Product creation failed.\", {\r\n                                variant: \"error\",\r\n                                anchorOrigin: {\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"center\"\r\n                                }\r\n                            });\r\n                        });\r\n                } else {\r\n                    enqueueSnackbar(\"Product creation failed.\", {\r\n                        variant: \"error\",\r\n                        anchorOrigin: {\r\n                            vertical: \"top\",\r\n                            horizontal: \"center\"\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                enqueueSnackbar(\"Product creation failed.\", {\r\n                    variant: \"error\",\r\n                    anchorOrigin: {\r\n                        vertical: \"top\",\r\n                        horizontal: \"center\"\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    function clearForm() {\r\n        setIsIdea(false);\r\n        setIsClassified(false);\r\n    }\r\n\r\n    function disableSubmitOnEnter(event) {\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    function readKey(event) {\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n            const {\r\n                component,\r\n                technology,\r\n                environmentRequirement,\r\n                customer\r\n            } = input;\r\n\r\n            switch (event.target.name) {\r\n                case \"component\":\r\n                    addComponent(component);\r\n                    break;\r\n                case \"technology\":\r\n                    addTechnology(technology);\r\n                    break;\r\n                case \"environmentRequirement\":\r\n                    addEnvironmentRequirement(environmentRequirement);\r\n                    break;\r\n                case \"customer\":\r\n                    addCustomer(customer);\r\n                    break;\r\n                default:\r\n                    console.log(\"Default case\");\r\n            }\r\n        }\r\n\r\n        if (event.key === \"Backspace\" && !event.target.value) {\r\n            switch (event.target.name) {\r\n                case \"component\":\r\n                    deleteComponent(components.length - 1);\r\n                    break;\r\n                case \"technology\":\r\n                    deleteTechnology(technologies.length - 1);\r\n                    break;\r\n                case \"environmentRequirement\":\r\n                    deleteEnvironmentRequirement(\r\n                        environmentRequirements.length - 1\r\n                    );\r\n                    break;\r\n                case \"customer\":\r\n                    deleteCustomer(customers.length - 1);\r\n                    break;\r\n                default:\r\n                    console.log(\"Default case\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <h1 className=\"create-product-header\">Add new product</h1>\r\n            <form\r\n                className={classes.form}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n                onSubmit={submitProduct}\r\n            >\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                    <Grid item xs={12} className={classes.inputField}>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={isClassified}\r\n                                    onChange={handleClassifiedSwitch}\r\n                                />\r\n                            }\r\n                            name=\"classified\"\r\n                            label=\"Is classified\"\r\n                            labelPlacement=\"start\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                onKeyDown={disableSubmitOnEnter}\r\n                                value={input.name}\r\n                                name=\"productName\"\r\n                                label=\"Name\"\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                onKeyDown={disableSubmitOnEnter}\r\n                                multiline\r\n                                name=\"shortDescription\"\r\n                                label=\"Short description\"\r\n                                value={input.shortDescription}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor=\"demo-customized-select-native\">\r\n                                Lifecycle status\r\n                            </InputLabel>\r\n                            <Select\r\n                                id=\"demo-customized-select-native\"\r\n                                name=\"lifecycleStatus\"\r\n                                value={input.lifecycleStatus}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <MenuItem value={1}>(1) Idea</MenuItem>\r\n                                <MenuItem value={2}>(2) Accepted idea</MenuItem>\r\n                                <MenuItem value={3}>(3) Planning</MenuItem>\r\n                                <MenuItem value={4}>\r\n                                    (4) In developement\r\n                                </MenuItem>\r\n                                <MenuItem value={5}>(5) Released</MenuItem>\r\n                                <MenuItem value={6}>(6) In production</MenuItem>\r\n                                <MenuItem value={7}>(7) Closed</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                multiline\r\n                                onChange={handleChange}\r\n                                name=\"longDescription\"\r\n                                label=\"Long description\"\r\n                                value={input.longDescription}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                onKeyDown={disableSubmitOnEnter}\r\n                                name=\"productOwner\"\r\n                                label=\"Product owner\"\r\n                                value={input.productOwner}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                onKeyDown={disableSubmitOnEnter}\r\n                                value={input.salesPerson}\r\n                                name=\"salesPerson\"\r\n                                label=\"Sales person\"\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                onKeyDown={disableSubmitOnEnter}\r\n                                name=\"businessType\"\r\n                                label=\"Business type\"\r\n                                value={input.businessType}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                onKeyDown={disableSubmitOnEnter}\r\n                                name=\"pricing\"\r\n                                label=\"Pricing\"\r\n                                value={input.pricing}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <div>\r\n                            <FormControl fullWidth>\r\n                                <TextField\r\n                                    onChange={handleChange}\r\n                                    name=\"technology\"\r\n                                    label=\"Technologies\"\r\n                                    onKeyDown={readKey}\r\n                                    value={input.technology}\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={10} style={{ padding: \"0\" }}>\r\n                        <div className={classes.chipContainer}>\r\n                            {technologies.map((technology, i) => (\r\n                                <Chip\r\n                                    key={i}\r\n                                    label={technology}\r\n                                    onDelete={() => deleteTechnology(i)}\r\n                                    className={classes.chip}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <div>\r\n                            <FormControl fullWidth>\r\n                                <TextField\r\n                                    onChange={handleChange}\r\n                                    name=\"component\"\r\n                                    label=\"Components\"\r\n                                    onKeyDown={readKey}\r\n                                    value={input.component}\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={10}>\r\n                        <div className={classes.chipContainer}>\r\n                            {components.map((component, i) => (\r\n                                <Chip\r\n                                    key={i}\r\n                                    label={component}\r\n                                    onDelete={() => deleteComponent(i)}\r\n                                    className={classes.chip}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <div>\r\n                            <FormControl fullWidth>\r\n                                <TextField\r\n                                    onChange={handleChange}\r\n                                    name=\"environmentRequirement\"\r\n                                    label=\"Environment Requirement\"\r\n                                    onKeyDown={readKey}\r\n                                    value={input.environmentRequirement}\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={10} style={{ padding: \"0\" }}>\r\n                        <div className={classes.chipContainer}>\r\n                            {environmentRequirements.map(\r\n                                (environmentRequirement, i) => (\r\n                                    <Chip\r\n                                        key={i}\r\n                                        label={environmentRequirement}\r\n                                        onDelete={() =>\r\n                                            deleteEnvironmentRequirement(i)\r\n                                        }\r\n                                        className={classes.chip}\r\n                                    />\r\n                                )\r\n                            )}\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <div>\r\n                            <FormControl fullWidth>\r\n                                <TextField\r\n                                    onChange={handleChange}\r\n                                    name=\"customer\"\r\n                                    label=\"Customer\"\r\n                                    onKeyDown={readKey}\r\n                                    value={input.customer}\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={10}>\r\n                        <div className={classes.chipContainer}>\r\n                            {customers.map((customer, i) => (\r\n                                <Chip\r\n                                    key={i}\r\n                                    label={customer}\r\n                                    onDelete={() => deleteCustomer(i)}\r\n                                    className={classes.chip}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.imageField}>\r\n                        <h2 className={classes.logoText}>\r\n                            Logo\r\n                            <IconButton\r\n                                aria-label=\"delete\"\r\n                                onClick={removeImage}\r\n                                className={\r\n                                    imageIshidden\r\n                                        ? classes.imgHidden\r\n                                        : classes.removeButton\r\n                                }\r\n                            >\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </h2>\r\n\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            type=\"file\"\r\n                            onChange={onUpload}\r\n                        />\r\n                        <label\r\n                            htmlFor=\"contained-button-file\"\r\n                            className={\r\n                                imageIshidden\r\n                                    ? classes.imgVisible\r\n                                    : classes.imgHidden\r\n                            }\r\n                        >\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component=\"span\"\r\n                                startIcon={<AddAPhoto />}\r\n                            >\r\n                                Upload\r\n                            </Button>\r\n                        </label>\r\n                        <img\r\n                            className={\r\n                                imageIshidden\r\n                                    ? classes.imgHidden\r\n                                    : classes.imgVisible\r\n                            }\r\n                            src={image}\r\n                            alt=\"\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ margin: \"20px\" }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        style={{ marginTop: \"30px\" }}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        maxWidth: \"50%\",\r\n        margin: \"60px auto\",\r\n        boxShadow: \"1px 2px 20px 1px#d4d4d4\",\r\n        padding: \"30px\",\r\n        borderRadius: \"25px\",\r\n        backgroundColor: \"white\"\r\n    },\r\n    form: {},\r\n    chip: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    chipContainer: {\r\n        minHeight: \"40px\"\r\n    },\r\n    flex: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    logoText: {\r\n        position: \"relative\",\r\n        fontFamily: \"Roboto\",\r\n        fontWeight: 300,\r\n        fontStyle: \"italic\",\r\n        margin: \"10px\"\r\n    },\r\n    imgVisible: {\r\n        maxHeight: \"180px\",\r\n        maxWidth: \"100%\",\r\n        margin: \"auto\"\r\n    },\r\n    imgHidden: {\r\n        visibility: \"Collapse\",\r\n        position: \"absolute\"\r\n    },\r\n    inputField: {\r\n        marginTop: \"10px\",\r\n        marginBottom: \"10px\",\r\n        marginLeft: \"10%\",\r\n        marginRight: \"10%\"\r\n    },\r\n    imageField: {},\r\n    removeButton: {\r\n        position: \"absolute\",\r\n        right: \"0px\",\r\n        padding: \"0\",\r\n        marginTop: \"4px\"\r\n    }\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Nav from \"./Nav\";\r\nimport Products from \"./Products\";\r\nimport CreateProduct from \"./CreateProduct\";\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport API_URL from \"../js/api\"\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction App() {\r\n  const [authorization, setAuthorization] = useState({\r\n    email: \"\",\r\n    userGroup: null,\r\n    name: \"\"\r\n  });\r\n\r\n  const links = [\r\n    { name: \"Home\", url: \"/\" },\r\n    { name: \"Products\", url: \"products\" },\r\n    { name: \"Create product\", url: \"create-product\" }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getLoginState();\r\n    setInterval(getLoginState, 1000 * 60); // Read login state every minute\r\n  }, []);\r\n\r\n  function getLoginState() {\r\n    axios\r\n      .get(API_URL + \"session\")\r\n      .then(response => {\r\n        const { email, name, userGroup } = response.data;\r\n        if (email && userGroup) {\r\n          setAuthorization({ email, name, userGroup });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <SnackbarProvider preventDuplicate maxSnack={3}>\r\n        <Router>\r\n          <Nav\r\n            links={links}\r\n            authorization={authorization}\r\n            setAuthorization={setAuthorization}\r\n          />\r\n          <div>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <div>\r\n                  <p>Home</p>\r\n                </div>\r\n              </Route>\r\n              <Route path=\"/products\">\r\n                <Products />\r\n              </Route>\r\n              <Route path=\"/create-product\">\r\n                <CreateProduct />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </SnackbarProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}