{"version":3,"sources":["js/api.js","components/Login.js","components/Nav.js","components/Product.js","components/Sidebar.js","components/SearchField.js","components/UserContext.js","components/ProductEditor.js","components/Products.js","components/CreateProduct.js","components/CreateUser.js","components/Users.js","components/profile.js","components/Settings.js","theme.js","components/DeletedProducts.js","components/ProductCard.js","components/ProductsView.js","components/ProductView.js","components/App.js","serviceWorker.js","index.js"],"names":["API_URL","window","location","host","includes","Login","props","classes","useStyles","useState","user","password","credentials","setCredentials","isOpen","setAuthorization","close","enqueueSnackbar","useSnackbar","handleChange","event","target","name","value","authorization","email","className","form","onSubmit","preventDefault","axios","post","then","response","data","userGroup","variant","catch","error","console","Button","type","root","color","log","auth","username","anchorOrigin","vertical","horizontal","TextField","onChange","id","label","textField","autoComplete","margin","makeStyles","theme","marginLeft","spacing","marginRight","width","display","flexDirection","padding","borderRadius","Nav","isLoginOpen","setIsLoginOpen","links","map","link","i","key","to","url","button","settingsLink","onClick","loginIconUp","loginIconDown","backgroundColor","palette","primary","main","justifyContent","listStyle","transform","transition","Product","product","setProduct","useParams","useEffect","get","res","err","Paper","elevation","paper","isClassified","fontSize","toggleEditMode","Fab","aria-label","size","style","float","productName","src","logos","length","alt","Stepper","alternativeLabel","activeStep","lifecycleStatus","index","Step","StepLabel","shortDescription","longDescription","technologies","Divider","Typography","chips","technology","Chip","components","component","environmentRequirements","requirement","customers","customer","bottomChipGroup","pricing","avatar","Avatar","productOwner","icon","salesPerson","maxWidth","Sidebar","products","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","aria-controls","heading","ExpansionPanelDetails","_id","selected","productSelected","productContainer","str","slice","typography","pxToRem","fontWeight","fontWeightRegular","minWidth","boxShadow","borderTop","alignItems","borderLeft","opacity","cursor","textAlign","search","searchIcon","InputBase","placeholder","onSearch","inputRoot","input","inputInput","inputProps","grow","flexGrow","position","shape","fade","common","white","breakpoints","up","height","pointerEvents","transitions","create","UserContext","React","createContext","UserProvider","Provider","Consumer","ProductEditor","isIdea","setIsIdea","setIsClassified","setComponents","setTechnologies","setEnvironmentRequirements","setCustomers","image","setImage","imageFile","setImageFile","imageIshidden","setImageIsHidden","businessType","environmentRequirement","setInput","deleteComponent","filter","deleteTechnology","deleteCustomer","deleteEnvironmentRequirement","uploadProduct","imageURL","logo","onEdit","message","disableSubmitOnEnter","readKey","addComponent","addTechnology","addEnvironmentRequirement","addCustomer","title","noValidate","formData","FormData","append","filename","status","uploadImage","Grid","container","direction","item","xs","inputField","FormControlLabel","control","Switch","checked","labelPlacement","FormControl","fullWidth","onKeyDown","required","multiline","InputLabel","htmlFor","Select","MenuItem","chipContainer","onDelete","chip","imageField","logoText","IconButton","imgHidden","removeButton","accept","multiple","files","reader","FileReader","onload","e","result","readAsDataURL","imgVisible","startIcon","marginTop","minHeight","flex","fontFamily","fontStyle","maxHeight","visibility","marginBottom","right","Products","setState","searchQuery","currentProduct","state","isEditMode","this","getProducts","context","selectedItem","myProducts","creator","ideas","publicProducts","Component","CreateProduct","contextType","header","CreateUser","emptyInput","confirmPassword","errors","setErrors","helperText","labelId","Users","columns","field","lookup","0","1","2","popup","reqEmail","newData","refreshTable","userData","options","actionsColumnIndex","editable","onRowUpdate","oldData","Promise","resolve","reject","setTimeout","editUser","indexOf","onRowDelete","deleteUser","splice","Profile","oldPassword","Settings","createMuiTheme","secondary","contrastThreshold","tonalOffset","DeletedProducts","getDeletedProducts","deleted","actions","tooltip","rowData","restoreProduct","ProductCard","Card","card","CardActionArea","CardMedia","media","CardContent","gutterBottom","CardActions","text","ProductsView","setProducts","cancelTimeout","setCancelTimeout","setSearch","isParticipant","filters","setFilters","useContext","params","debounce","handleFilterChange","callback","clearTimeout","t","searchField","formControl","FormLabel","FormGroup","Checkbox","defaults","withCredentials","img","ProductView","setIsEditMode","isAllowedToEdit","App","USERGROUP","getLoginState","push","setInterval","ThemeProvider","preventDuplicate","maxSnack","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.160a85fb.chunk.js","sourcesContent":["const API_URL = window.location.host.includes(\"localhost\")\r\n    ? \"http://localhost:8080/\"\r\n    : \"http://nodejs-mongo-persistent-tuhlari.rahtiapp.fi/\";\r\n\r\nexport default API_URL;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport API_URL from \"../js/api\";\r\n\r\nexport default function Login(props) {\r\n    const classes = useStyles();\r\n    const [credentials, setCredentials] = useState({ user: \"\", password: \"\" });\r\n    const { isOpen, setAuthorization, close } = props;\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    function handleChange(event) {\r\n        setCredentials({\r\n            ...credentials,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    function login(event) {\r\n        event.preventDefault();\r\n        console.log(credentials);\r\n        axios\r\n            .post(\r\n                API_URL + \"login\",\r\n                {},\r\n                {\r\n                    auth: {\r\n                        username: credentials.user,\r\n                        password: credentials.password\r\n                    }\r\n                }\r\n            )\r\n            .then(response => {\r\n                const { email, name, userGroup } = response.data;\r\n                if (email && userGroup) {\r\n                    setAuthorization({ email, name, userGroup });\r\n                    setCredentials({ user: \"\", password: \"\" });\r\n                    enqueueSnackbar(\"Successfully logged in\", {\r\n                        variant: \"success\",\r\n                        anchorOrigin: {\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"center\"\r\n                        }\r\n                    });\r\n                    close();\r\n                } else {\r\n                    enqueueSnackbar(\"Failed to login\", {\r\n                        variant: \"error\",\r\n                        anchorOrigin: {\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"center\"\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n\r\n            .catch(error => {\r\n                console.error(error);\r\n                enqueueSnackbar(\"Failed to login\", {\r\n                    variant: \"error\",\r\n                    anchorOrigin: {\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"center\"\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    function logout(event) {\r\n        event.preventDefault();\r\n        axios\r\n            .post(API_URL + \"logout\")\r\n            .then(response => {\r\n                const { email, name, userGroup } = response.data;\r\n                setAuthorization({ email, name, userGroup });\r\n                enqueueSnackbar(\"Successfully logged out\", { variant: \"info\" });\r\n                close();\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    if (props.authorization.email) {\r\n        return (\r\n            <div className={isOpen ? \"login login-open\" : \"login login-closed\"}>\r\n                <form className={classes.form} onSubmit={logout}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        className={classes.root}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Logout\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={isOpen ? \"login login-open\" : \"login login-closed\"}>\r\n                <form className={classes.form} onSubmit={login}>\r\n                    <TextField\r\n                        onChange={handleChange}\r\n                        id=\"standard-password-input\"\r\n                        label=\"Email\"\r\n                        name=\"user\"\r\n                        className={classes.textField}\r\n                        autoComplete=\"current-password\"\r\n                        margin=\"normal\"\r\n                        value={credentials.user}\r\n                    />\r\n\r\n                    <TextField\r\n                        onChange={handleChange}\r\n                        id=\"standard-password-input\"\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        className={classes.textField}\r\n                        type=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        margin=\"normal\"\r\n                        value={credentials.password}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        className={classes.root}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: \"1rem\",\r\n        borderRadius: \"1.5rem\"\r\n    }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Login from \"./Login\";\r\nimport KeyboardArrowDown from \"@material-ui/icons/KeyboardArrowDown\";\r\n\r\nexport default function Nav(props) {\r\n  const classes = useStyles();\r\n  const [isLoginOpen, setIsLoginOpen] = useState(false);\r\n  const { authorization, setAuthorization } = props;\r\n\r\n  function openCloseLoginWindow() {\r\n    setIsLoginOpen(!isLoginOpen);\r\n  }\r\n\r\n  return (\r\n    <nav className={classes.root}>\r\n      <ul>\r\n        {props.links.map((link, i) => (\r\n          <li key={i}>\r\n            <Link to={link.url}>\r\n              <Button className={classes.button}>{link.name}</Button>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <ul>\r\n        <Link to=\"settings\" className={classes.settingsLink}>\r\n          <Button className={classes.button}>{\"Settings\"}</Button>\r\n        </Link>\r\n        <Button\r\n          onClick={openCloseLoginWindow}\r\n          color=\"primary\"\r\n          className={classes.button}\r\n        >\r\n          {authorization.email ? \"Logged in\" : \"Login\"}{\" \"}\r\n          <KeyboardArrowDown\r\n            className={\r\n              isLoginOpen ? classes.loginIconUp : classes.loginIconDown\r\n            }\r\n          />\r\n        </Button>\r\n        <Login\r\n          isOpen={isLoginOpen}\r\n          close={() => setIsLoginOpen(false)}\r\n          setAuthorization={setAuthorization}\r\n          authorization={authorization}\r\n        />\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    \"& ul\": {\r\n      listStyle: \"none\",\r\n      margin: 0\r\n    },\r\n    \"& li\": {\r\n      display: \"inline-block\"\r\n    }\r\n  },\r\n  loginIconUp: {\r\n    transform: \"rotate(-180deg)\",\r\n    transition: \"all 0.25s\"\r\n  },\r\n  loginIconDown: {\r\n    transition: \"all 0.25s\",\r\n    transform: \"rotate(0deg)\"\r\n  },\r\n  button: {\r\n    color: \"white\",\r\n    marginRight: \"20px\",\r\n    padding: \"10px 10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"a90018\"\r\n    }\r\n  },\r\n  settingsLink: {}\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport SecurityIcon from \"@material-ui/icons/Security\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../js/api\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function Product(props) {\r\n    const classes = useStyles();\r\n    const [product, setProduct] = useState(null);\r\n    const { id } = useParams();\r\n    const lifecycleStatuses = [\r\n        \"Idea\",\r\n        \"Accepted\",\r\n        \"Planning\",\r\n        \"Developement\",\r\n        \"Released\",\r\n        \"Production\",\r\n        \"Closed\"\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            axios\r\n                .get(API_URL + \"product/\" + id)\r\n                .then(res => setProduct(res.data))\r\n                .catch(err => console.log(err));\r\n        }\r\n    }, [id]);\r\n\r\n    if (product) {\r\n        return (\r\n            <div className={props.className}>\r\n                <Paper elevation={2} className={classes.paper}>\r\n                    {product.isClassified ? (\r\n                        <SecurityIcon color=\"primary\" fontSize=\"large\" />\r\n                    ) : null}\r\n                    {props.toggleEditMode ? (\r\n                        <Fab\r\n                            color=\"secondary\"\r\n                            aria-label=\"edit\"\r\n                            size=\"small\"\r\n                            style={{ float: \"right\" }}\r\n                            onClick={props.toggleEditMode}\r\n                        >\r\n                            <EditIcon />\r\n                        </Fab>\r\n                    ) : null}\r\n                    <div className=\"product-header\">\r\n                        <h1>{product.productName}</h1>\r\n                        <img\r\n                            className=\"logo-large\"\r\n                            src={\r\n                                product.logos[product.logos.length - 1] ||\r\n                                \"https://image.shutterstock.com/image-vector/ui-image-placeholder-wireframes-apps-260nw-1037719204.jpg\"\r\n                            }\r\n                            alt={product.productName}\r\n                        ></img>\r\n                    </div>\r\n                    <Stepper\r\n                        alternativeLabel\r\n                        activeStep={product.lifecycleStatus - 1}\r\n                    >\r\n                        {lifecycleStatuses.map((label, index) => {\r\n                            return (\r\n                                <Step key={label}>\r\n                                    <StepLabel>{label}</StepLabel>\r\n                                </Step>\r\n                            );\r\n                        })}\r\n                    </Stepper>\r\n                    <div>\r\n                        <p className=\"product-short-description\">\r\n                            {product.shortDescription}\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"product-long-description\">\r\n                            {product.longDescription}\r\n                        </p>\r\n                        {product.technologies.length ? (\r\n                            <div>\r\n                                <Divider />\r\n                                <Typography variant=\"caption\">\r\n                                    Technologies:\r\n                                </Typography>\r\n                                <div className={classes.chips}>\r\n                                    {product.technologies.map(\r\n                                        (technology, i) => (\r\n                                            <Chip\r\n                                                key={i}\r\n                                                label={technology}\r\n                                                color=\"secondary\"\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                        )\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        ) : null}\r\n                        {product.components.length ? (\r\n                            <div>\r\n                                <Divider />\r\n                                <Typography variant=\"caption\">\r\n                                    Components:\r\n                                </Typography>\r\n                                <div className={classes.chips}>\r\n                                    {product.components.map((component, i) => (\r\n                                        <Chip\r\n                                            key={i}\r\n                                            label={component}\r\n                                            color=\"secondary\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ) : null}\r\n                        {product.environmentRequirements.length ? (\r\n                            <div>\r\n                                <Divider />\r\n                                <Typography variant=\"caption\">\r\n                                    Environment Requirements:\r\n                                </Typography>\r\n                                <div className={classes.chips}>\r\n                                    {product.environmentRequirements.map(\r\n                                        (requirement, i) => (\r\n                                            <Chip\r\n                                                key={i}\r\n                                                label={requirement}\r\n                                                color=\"secondary\"\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                        )\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        ) : null}\r\n                        {product.customers.length ? (\r\n                            <div>\r\n                                <Divider />\r\n                                <Typography variant=\"caption\">\r\n                                    Customers:\r\n                                </Typography>\r\n                                <div className={classes.chips}>\r\n                                    {product.customers.map((customer, i) => (\r\n                                        <Chip\r\n                                            key={i}\r\n                                            label={customer}\r\n                                            color=\"secondary\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ) : null}\r\n                        <Divider />\r\n                        <div className={classes.bottomChipGroup}>\r\n                            {product.pricing ? (\r\n                                <div>\r\n                                    <Typography variant=\"caption\">\r\n                                        Pricing:\r\n                                    </Typography>\r\n                                    <div>\r\n                                        <Chip\r\n                                            color=\"primary\"\r\n                                            label={product.pricing}\r\n                                            avatar={<Avatar>€</Avatar>}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            ) : null}\r\n                            {product.productOwner ? (\r\n                                <div>\r\n                                    <Typography variant=\"caption\">\r\n                                        Product Owner:\r\n                                    </Typography>\r\n                                    <div>\r\n                                        <Chip\r\n                                            variant=\"outlined\"\r\n                                            color=\"primary\"\r\n                                            label={product.productOwner}\r\n                                            icon={<PermIdentityIcon />}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            ) : null}\r\n                            {product.salesPerson ? (\r\n                                <div>\r\n                                    <Typography variant=\"caption\">\r\n                                        Sales Person:\r\n                                    </Typography>\r\n                                    <div>\r\n                                        <Chip\r\n                                            variant=\"outlined\"\r\n                                            color=\"primary\"\r\n                                            label={product.salesPerson}\r\n                                            icon={<PermIdentityIcon />}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            ) : null}\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <p>Loading...</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        maxWidth: 1000,\r\n        padding: theme.spacing(4),\r\n        margin: \"auto\"\r\n    },\r\n    chips: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(0.6)\r\n        }\r\n    },\r\n    bottomChipGroup: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-evenly\"\r\n    }\r\n}));\r\n","import React from \"react\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction trimString(str) {\r\n    if (str.length > 24) {\r\n        str = str.slice(0, 24) + \"...\";\r\n    }\r\n    return str;\r\n}\r\n\r\nexport default function Sidebar(props) {\r\n    const { name, products } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <ExpansionPanel\r\n                className={classes.root}\r\n                defaultExpanded={props.defaultExpanded}\r\n            >\r\n                <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography className={classes.heading}>{name}</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <ul className={classes.products}>\r\n                        {products.map((product, i) => (\r\n                            <li\r\n                                key={product._id}\r\n                                className={\r\n                                    props.selected === product._id\r\n                                        ? classes.productSelected\r\n                                        : classes.product\r\n                                }\r\n                                onClick={() => props.setProduct(products[i])}\r\n                            >\r\n                                <div className={classes.productContainer}>\r\n                                    <img\r\n                                        className=\"logo-normal\"\r\n                                        src={\r\n                                            product.logos[\r\n                                                product.logos.length - 1\r\n                                            ] ||\r\n                                            \"https://image.shutterstock.com/image-vector/ui-image-placeholder-wireframes-apps-260nw-1037719204.jpg\"\r\n                                        }\r\n                                        alt={product.productName}\r\n                                    />\r\n                                    <p>{trimString(product.productName)}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <ExpandMoreIcon />\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: 0,\r\n        \"& .MuiExpansionPanelDetails-root\": {\r\n            padding: 0\r\n        }\r\n    },\r\n\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular\r\n    },\r\n    products: {\r\n        listStyle: \"none\",\r\n        padding: 0,\r\n        margin: 0\r\n    },\r\n    product: {\r\n        minWidth: 300,\r\n        padding: \"0.5rem 0\",\r\n        backgroundColor: \"#f5f5f5\",\r\n        boxShadow: \"1px 5px 10px 1px #c5c5c5\",\r\n        borderTop: \"1px solid #c9c9c9\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        borderLeft: \"10px solid #cfcfcf\",\r\n        \"& svg\": {\r\n            transform: \"rotate(-90deg)\",\r\n            marginRight: 10,\r\n            opacity: 0\r\n        },\r\n        \"&:hover\": {\r\n            backgroundColor: \"#e4e4e4\",\r\n            transition: \"all 250ms\",\r\n            cursor: \"pointer\",\r\n            borderLeft: \"10px solid #989898\",\r\n            \"& svg\": {\r\n                opacity: 1\r\n            }\r\n        }\r\n    },\r\n    productContainer: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-around\",\r\n        marginLeft: 10,\r\n        minWidth: 130,\r\n        \"& p\": {\r\n            marginLeft: 20,\r\n            width: 200,\r\n            textAlign: \"left\"\r\n        }\r\n    },\r\n\r\n    productSelected: {\r\n        minWidth: 300,\r\n        padding: \"0.5rem 0\",\r\n        backgroundColor: \"#dbdbdb\",\r\n        boxShadow: \"1px 5px 10px 1px #c5c5c5\",\r\n        borderTop: \"1px solid #c9c9c9\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        borderLeft: \"10px solid #d8001f\",\r\n        \"& svg\": {\r\n            transform: \"rotate(90deg)\",\r\n            transition: \"transform 200ms\",\r\n            marginRight: 10\r\n        },\r\n        \"&:hover\": {\r\n            cursor: \"pointer\",\r\n            \"& svg\": {\r\n                marginRight: 10\r\n            }\r\n        }\r\n    }\r\n}));\r\n","import React from \"react\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default function Sidebar(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n                placeholder=\"Search…\"\r\n                onChange={props.onSearch}\r\n                classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput\r\n                }}\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    search: {\r\n        position: \"relative\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        \"&:hover\": {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25)\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: \"auto\"\r\n        }\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    inputRoot: {\r\n        color: \"inherit\"\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create(\"width\"),\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: 200\r\n        }\r\n    }\r\n}));\r\n","import React from 'react';\r\n\r\nconst UserContext = React.createContext({});\r\n\r\nexport const UserProvider = UserContext.Provider;\r\nexport const UserConsumer = UserContext.Consumer;\r\nexport default UserContext;","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport AddAPhoto from \"@material-ui/icons/AddAPhoto\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport API_URL from \"../js/api\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nexport default function ProductEditor(props) {\r\n    const classes = useStyles();\r\n\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const [isIdea, setIsIdea] = useState(false);\r\n    const [isClassified, setIsClassified] = useState(false);\r\n    const [components, setComponents] = useState([]);\r\n    const [technologies, setTechnologies] = useState([]);\r\n    const [environmentRequirements, setEnvironmentRequirements] = useState([]);\r\n    const [customers, setCustomers] = useState([]);\r\n    const [image, setImage] = useState(null);\r\n    const [imageFile, setImageFile] = useState();\r\n    const [imageIshidden, setImageIsHidden] = useState(true);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const { product } = props;\r\n\r\n    const [input, setInput] = useState({\r\n        productName: \"\",\r\n        shortDescription: \"\",\r\n        longDescription: \"\",\r\n        pricing: \"\",\r\n        salesPerson: \"\",\r\n        productOwner: \"\",\r\n        businessType: \"\",\r\n        lifecycleStatus: \"\",\r\n        technology: \"\",\r\n        component: \"\",\r\n        environmentRequirement: \"\",\r\n        customer: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (props.product) {\r\n            setInput({\r\n                productName: props.product.productName,\r\n                shortDescription: props.product.shortDescription,\r\n                longDescription: props.product.longDescription,\r\n                pricing: props.product.pricing,\r\n                salesPerson: props.product.salesPerson,\r\n                productOwner: props.product.productOwner,\r\n                businessType: props.product.businessType,\r\n                lifecycleStatus: props.product.lifecycleStatus\r\n            });\r\n            if (props.product.technologies) {\r\n                setTechnologies(props.product.technologies);\r\n            }\r\n\r\n            if (props.product.components) {\r\n                setComponents(props.product.components);\r\n            }\r\n            if (props.product.environmentRequirements) {\r\n                setEnvironmentRequirements(\r\n                    props.product.environmentRequirements\r\n                );\r\n            }\r\n            if (props.product.customers) {\r\n                setCustomers(props.product.customers);\r\n            }\r\n            setIsClassified(props.product.isClassified);\r\n            if (props.product.logos.length) {\r\n                setImage(props.product.logos[props.product.logos.length - 1]);\r\n                setImageIsHidden(false);\r\n            }\r\n        }\r\n    }, [props]);\r\n\r\n    function handleChange(event) {\r\n        setInput({\r\n            ...input,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    function handleLifecycleStatus(event) {\r\n        setInput({\r\n            ...input,\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n        if (event.target.value === 1) {\r\n            setIsIdea(true);\r\n        } else {\r\n            setIsIdea(false);\r\n        }\r\n    }\r\n\r\n    function handleClassifiedSwitch() {\r\n        setIsClassified(!isClassified);\r\n    }\r\n\r\n    function addComponent(component) {\r\n        if (!component) return;\r\n        setComponents([...components, component]);\r\n        setInput({ ...input, component: \"\" });\r\n    }\r\n\r\n    function addTechnology(technology) {\r\n        if (!technology) return;\r\n        setTechnologies([...technologies, technology]);\r\n        setInput({ ...input, technology: \"\" });\r\n    }\r\n\r\n    function addCustomer(customer) {\r\n        if (!customer) return;\r\n        setCustomers([...customers, customer]);\r\n        setInput({ ...input, customer: \"\" });\r\n    }\r\n\r\n    function addEnvironmentRequirement(environmentRequirement) {\r\n        if (!environmentRequirement) return;\r\n        setEnvironmentRequirements([\r\n            ...environmentRequirements,\r\n            environmentRequirement\r\n        ]);\r\n        setInput({ ...input, environmentRequirement: \"\" });\r\n    }\r\n\r\n    function deleteComponent(index) {\r\n        setComponents(components.filter((component, i) => index !== i));\r\n    }\r\n\r\n    function deleteTechnology(index) {\r\n        setTechnologies(technologies.filter((technology, i) => index !== i));\r\n    }\r\n\r\n    function deleteCustomer(index) {\r\n        setCustomers(customers.filter((customer, i) => index !== i));\r\n    }\r\n\r\n    function deleteEnvironmentRequirement(index) {\r\n        setEnvironmentRequirements(\r\n            environmentRequirements.filter(\r\n                (environmentRequirement, i) => index !== i\r\n            )\r\n        );\r\n    }\r\n\r\n    function onUpload(event) {\r\n        setImageIsHidden(!imageIshidden);\r\n        // console.log(event);\r\n\r\n        if (event.target.files && event.target.files[0]) {\r\n            const reader = new FileReader();\r\n            setImageFile(event.target.files[0]);\r\n            reader.onload = e => setImage(e.target.result);\r\n\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    function removeImage() {\r\n        setImageIsHidden(!imageIshidden);\r\n        setImage(null);\r\n    }\r\n\r\n    function validateSubmit() {\r\n        if (\r\n            isIdea &&\r\n            input.productName.length > 3 &&\r\n            input.shortDescription.length > 3\r\n        )\r\n            return true;\r\n        else if (\r\n            input.productName.length > 3 &&\r\n            input.shortDescription.length > 3 &&\r\n            input.productOwner.length > 3\r\n        )\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    function submitProduct(event) {\r\n        event.preventDefault();\r\n\r\n        if (!validateSubmit()) {\r\n            enqueueSnackbar(\"Required fields not filled!\", {\r\n                variant: \"warning\",\r\n                anchorOrigin: {\r\n                    vertical: \"top\",\r\n                    horizontal: \"center\"\r\n                }\r\n            });\r\n        } else {\r\n            if (imageFile) {\r\n                uploadImage(); // Upload image will handle product upload\r\n            } else {\r\n                uploadProduct();\r\n            }\r\n        }\r\n    }\r\n\r\n    function uploadImage() {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", imageFile, imageFile.filename);\r\n\r\n        axios\r\n            .post(API_URL + \"uploadImage\", formData)\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.status === 200) {\r\n                    uploadProduct(API_URL + response.data);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                enqueueSnackbar(\"Image upload failed.\", {\r\n                    variant: \"error\",\r\n                    anchorOrigin: {\r\n                        vertical: \"top\",\r\n                        horizontal: \"center\"\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    function uploadProduct(imageURL) {\r\n        const id = props.product ? props.product._id : null;\r\n        const product = input;\r\n        product.isIdea = isIdea;\r\n        product.isClassified = isClassified;\r\n        product.technologies = technologies;\r\n        product.components = components;\r\n        product.customers = customers;\r\n        product.environmentRequirements = environmentRequirements;\r\n        product.logo = imageURL || \"\";\r\n        product.id = id ? id : null;\r\n        delete product.technology;\r\n        delete product.component;\r\n        delete product.environmentRequirement;\r\n        delete product.customer;\r\n\r\n        axios\r\n            .post(API_URL + (id ? \"editProduct\" : \"addProduct\"), product)\r\n            .then(response => {\r\n                console.log(response);\r\n                enqueueSnackbar(id ? \"Product edited\" : \"Product added\", {\r\n                    variant: \"success\",\r\n                    anchorOrigin: {\r\n                        vertical: \"top\",\r\n                        horizontal: \"center\"\r\n                    }\r\n                });\r\n                if (!props.toggleEditMode) {\r\n                    clearInput();\r\n                } else {\r\n                    props.onEdit();\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response);\r\n                enqueueSnackbar(error.response.data.message, {\r\n                    variant: \"error\",\r\n                    anchorOrigin: {\r\n                        vertical: \"top\",\r\n                        horizontal: \"center\"\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    function clearInput() {\r\n        setIsIdea(false);\r\n        setIsClassified(false);\r\n        setInput({\r\n            productName: \"\",\r\n            shortDescription: \"\",\r\n            longDescription: \"\",\r\n            pricing: \"\",\r\n            salesPerson: \"\",\r\n            productOwner: \"\",\r\n            businessType: \"\",\r\n            lifecycleStatus: \"\",\r\n            technology: \"\",\r\n            component: \"\",\r\n            environmentRequirement: \"\",\r\n            customer: \"\"\r\n        });\r\n        setImage(null);\r\n        setImageIsHidden(true);\r\n        setImageFile(null);\r\n        setTechnologies([]);\r\n        setComponents([]);\r\n        setEnvironmentRequirements([]);\r\n        setCustomers([]);\r\n    }\r\n\r\n    function disableSubmitOnEnter(event) {\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    function readKey(event) {\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n            const {\r\n                component,\r\n                technology,\r\n                environmentRequirement,\r\n                customer\r\n            } = input;\r\n\r\n            switch (event.target.name) {\r\n                case \"component\":\r\n                    addComponent(component);\r\n                    break;\r\n                case \"technology\":\r\n                    addTechnology(technology);\r\n                    break;\r\n                case \"environmentRequirement\":\r\n                    addEnvironmentRequirement(environmentRequirement);\r\n                    break;\r\n                case \"customer\":\r\n                    addCustomer(customer);\r\n                    break;\r\n                default:\r\n                    console.log(\"Default case\");\r\n            }\r\n        }\r\n\r\n        if (event.key === \"Backspace\" && !event.target.value) {\r\n            switch (event.target.name) {\r\n                case \"component\":\r\n                    deleteComponent(components.length - 1);\r\n                    break;\r\n                case \"technology\":\r\n                    deleteTechnology(technologies.length - 1);\r\n                    break;\r\n                case \"environmentRequirement\":\r\n                    deleteEnvironmentRequirement(\r\n                        environmentRequirements.length - 1\r\n                    );\r\n                    break;\r\n                case \"customer\":\r\n                    deleteCustomer(customers.length - 1);\r\n                    break;\r\n                default:\r\n                    console.log(\"Default case\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Paper elevation={2} className={classes.root}>\r\n            {props.toggleEditMode ? (\r\n                <Fab\r\n                    color=\"secondary\"\r\n                    aria-label=\"edit\"\r\n                    size=\"small\"\r\n                    style={{ float: \"right\" }}\r\n                    onClick={props.toggleEditMode}\r\n                >\r\n                    <EditIcon />\r\n                </Fab>\r\n            ) : null}\r\n            <h1 className=\"create-product-header\">{props.title}</h1>\r\n            <form\r\n                className={classes.form}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n                onSubmit={submitProduct}\r\n            >\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                    <Grid item xs={12} className={classes.inputField}>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={isClassified}\r\n                                    onChange={handleClassifiedSwitch}\r\n                                    value=\"isClassified\"\r\n                                />\r\n                            }\r\n                            name=\"classified\"\r\n                            label=\"Is classified\"\r\n                            labelPlacement=\"start\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                onKeyDown={disableSubmitOnEnter}\r\n                                value={input.productName}\r\n                                name=\"productName\"\r\n                                label=\"Name\"\r\n                                required\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                onKeyDown={disableSubmitOnEnter}\r\n                                multiline\r\n                                name=\"shortDescription\"\r\n                                label=\"Short description\"\r\n                                value={input.shortDescription}\r\n                                required\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel\r\n                                htmlFor=\"demo-customized-select-native\"\r\n                                required\r\n                            >\r\n                                Lifecycle status\r\n                            </InputLabel>\r\n                            <Select\r\n                                id=\"demo-customized-select-native\"\r\n                                name=\"lifecycleStatus\"\r\n                                value={input.lifecycleStatus}\r\n                                onChange={handleLifecycleStatus}\r\n                            >\r\n                                <MenuItem value={1}>(1) Idea</MenuItem>\r\n                                <MenuItem value={2}>(2) Accepted idea</MenuItem>\r\n                                <MenuItem value={3}>(3) Planning</MenuItem>\r\n                                <MenuItem value={4}>\r\n                                    (4) In developement\r\n                                </MenuItem>\r\n                                <MenuItem value={5}>(5) Released</MenuItem>\r\n                                <MenuItem value={6}>(6) In production</MenuItem>\r\n                                <MenuItem value={7}>(7) Closed</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                multiline\r\n                                onChange={handleChange}\r\n                                name=\"longDescription\"\r\n                                label=\"Long description\"\r\n                                value={input.longDescription}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                onKeyDown={disableSubmitOnEnter}\r\n                                name=\"productOwner\"\r\n                                label=\"Product owner\"\r\n                                value={input.productOwner}\r\n                                required={!isIdea}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                onKeyDown={disableSubmitOnEnter}\r\n                                value={input.salesPerson}\r\n                                name=\"salesPerson\"\r\n                                label=\"Sales person\"\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                onKeyDown={disableSubmitOnEnter}\r\n                                name=\"businessType\"\r\n                                label=\"Business type\"\r\n                                value={input.businessType}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                onChange={handleChange}\r\n                                onKeyDown={disableSubmitOnEnter}\r\n                                name=\"pricing\"\r\n                                label=\"Pricing\"\r\n                                value={input.pricing}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <div>\r\n                            <FormControl fullWidth>\r\n                                <TextField\r\n                                    onChange={handleChange}\r\n                                    name=\"technology\"\r\n                                    label=\"Technologies\"\r\n                                    onKeyDown={readKey}\r\n                                    value={input.technology}\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={10} style={{ padding: \"0\" }}>\r\n                        <div className={classes.chipContainer}>\r\n                            {technologies.map((technology, i) => (\r\n                                <Chip\r\n                                    key={i}\r\n                                    label={technology}\r\n                                    onDelete={() => deleteTechnology(i)}\r\n                                    className={classes.chip}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <div>\r\n                            <FormControl fullWidth>\r\n                                <TextField\r\n                                    onChange={handleChange}\r\n                                    name=\"component\"\r\n                                    label=\"Components\"\r\n                                    onKeyDown={readKey}\r\n                                    value={input.component}\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={10}>\r\n                        <div className={classes.chipContainer}>\r\n                            {components.map((component, i) => (\r\n                                <Chip\r\n                                    key={i}\r\n                                    label={component}\r\n                                    onDelete={() => deleteComponent(i)}\r\n                                    className={classes.chip}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <div>\r\n                            <FormControl fullWidth>\r\n                                <TextField\r\n                                    onChange={handleChange}\r\n                                    name=\"environmentRequirement\"\r\n                                    label=\"Environment Requirement\"\r\n                                    onKeyDown={readKey}\r\n                                    value={input.environmentRequirement}\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={10} style={{ padding: \"0\" }}>\r\n                        <div className={classes.chipContainer}>\r\n                            {environmentRequirements.map(\r\n                                (environmentRequirement, i) => (\r\n                                    <Chip\r\n                                        key={i}\r\n                                        label={environmentRequirement}\r\n                                        onDelete={() =>\r\n                                            deleteEnvironmentRequirement(i)\r\n                                        }\r\n                                        className={classes.chip}\r\n                                    />\r\n                                )\r\n                            )}\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={10} className={classes.inputField}>\r\n                        <div>\r\n                            <FormControl fullWidth>\r\n                                <TextField\r\n                                    onChange={handleChange}\r\n                                    name=\"customer\"\r\n                                    label=\"Customer\"\r\n                                    onKeyDown={readKey}\r\n                                    value={input.customer}\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={10}>\r\n                        <div className={classes.chipContainer}>\r\n                            {customers.map((customer, i) => (\r\n                                <Chip\r\n                                    key={i}\r\n                                    label={customer}\r\n                                    onDelete={() => deleteCustomer(i)}\r\n                                    className={classes.chip}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.imageField}>\r\n                        <h2 className={classes.logoText}>\r\n                            Logo\r\n                            <IconButton\r\n                                aria-label=\"delete\"\r\n                                onClick={removeImage}\r\n                                className={\r\n                                    imageIshidden\r\n                                        ? classes.imgHidden\r\n                                        : classes.removeButton\r\n                                }\r\n                            >\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </h2>\r\n\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            type=\"file\"\r\n                            onChange={onUpload}\r\n                        />\r\n                        <label\r\n                            htmlFor=\"contained-button-file\"\r\n                            className={\r\n                                imageIshidden\r\n                                    ? classes.imgVisible\r\n                                    : classes.imgHidden\r\n                            }\r\n                        >\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component=\"span\"\r\n                                startIcon={<AddAPhoto />}\r\n                            >\r\n                                Upload\r\n                            </Button>\r\n                        </label>\r\n                        <img\r\n                            className={\r\n                                imageIshidden\r\n                                    ? classes.imgHidden\r\n                                    : classes.imgVisible\r\n                            }\r\n                            src={image}\r\n                            alt=\"\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ margin: \"20px\" }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        style={{ marginTop: \"30px\" }}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </Grid>\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        maxWidth: 1000,\r\n        padding: theme.spacing(4),\r\n        margin: \"auto\"\r\n    },\r\n    form: {},\r\n    chip: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    chipContainer: {\r\n        minHeight: \"40px\"\r\n    },\r\n    flex: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    logoText: {\r\n        position: \"relative\",\r\n        fontFamily: \"Roboto\",\r\n        fontWeight: 300,\r\n        fontStyle: \"italic\",\r\n        margin: \"10px\"\r\n    },\r\n    imgVisible: {\r\n        maxHeight: \"180px\",\r\n        maxWidth: \"100%\",\r\n        margin: \"auto\"\r\n    },\r\n    imgHidden: {\r\n        visibility: \"collapse\",\r\n        position: \"absolute\"\r\n    },\r\n    inputField: {\r\n        marginTop: \"10px\",\r\n        marginBottom: \"10px\",\r\n        marginLeft: \"10%\",\r\n        marginRight: \"10%\"\r\n    },\r\n    imageField: {},\r\n    removeButton: {\r\n        position: \"absolute\",\r\n        right: \"0px\",\r\n        padding: \"0\",\r\n        marginTop: \"4px\"\r\n    }\r\n}));\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Product from \"./Product\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport SearchField from \"./SearchField\";\r\nimport UserContext from \"./UserContext\";\r\nimport API_URL from \"../js/api\";\r\nimport ProductEditor from \"./ProductEditor\";\r\n\r\nexport default class Products extends React.Component {\r\n    static contextType = UserContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentProduct: null,\r\n            products: [],\r\n            isEditMode: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProducts();\r\n    }\r\n\r\n    onSearch = event => {\r\n        this.setState({ searchQuery: event.target.value });\r\n    };\r\n\r\n    getProducts() {\r\n        axios\r\n            .get(API_URL + \"products\")\r\n            .then(response => {\r\n                console.log(response.data);\r\n                this.setState({ products: response.data });\r\n            })\r\n            .catch(err => console.log(err.message));\r\n    }\r\n\r\n    setProduct = product => {\r\n        this.setState({\r\n            currentProduct:\r\n                this.state.currentProduct === product ? null : product\r\n        });\r\n    };\r\n\r\n    toggleEditMode = () => {\r\n        this.setState({ isEditMode: !this.state.isEditMode });\r\n    };\r\n\r\n    render() {\r\n        const user = this.context;\r\n        const { currentProduct } = this.state;\r\n        const selectedItem = currentProduct ? currentProduct._id : \"\";\r\n\r\n        const myProducts = this.state.products.filter(\r\n            product =>\r\n                (product.creator === user.email ||\r\n                    product.productOwner === user.email ||\r\n                    product.salesPerson === user.email) &&\r\n                product.isIdea === false\r\n        );\r\n\r\n        const ideas = this.state.products.filter(product => product.isIdea);\r\n\r\n        const publicProducts = this.state.products.filter(\r\n            product => !myProducts.includes(product) && !product.isIdea\r\n        );\r\n\r\n        return (\r\n            <div className=\"products\">\r\n                <div className=\"sidebar\">\r\n                    <SearchField onSearch={this.onSearch} />\r\n                    <Sidebar\r\n                        defaultExpanded\r\n                        setProduct={this.setProduct}\r\n                        selected={selectedItem}\r\n                        products={myProducts}\r\n                        name=\"Omat tuotteet\"\r\n                    />\r\n                    <Sidebar\r\n                        setProduct={this.setProduct}\r\n                        selected={selectedItem}\r\n                        products={ideas}\r\n                        name=\"Ideat\"\r\n                    />\r\n                    <Sidebar\r\n                        setProduct={this.setProduct}\r\n                        selected={selectedItem}\r\n                        products={publicProducts}\r\n                        name=\"Julkiset tuotteet\"\r\n                    />\r\n                </div>\r\n                <div className=\"product-container\">\r\n                    {this.state.isEditMode ? (\r\n                        <ProductEditor\r\n                            toggleEditMode={this.toggleEditMode}\r\n                            product={this.state.currentProduct}\r\n                            title=\"Edit product\"\r\n                        />\r\n                    ) : (\r\n                        <Product\r\n                            product={this.state.currentProduct}\r\n                            toggleEditMode={this.toggleEditMode}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport ProductEditor from \"./ProductEditor\";\r\n\r\nexport default function CreateProduct() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <ProductEditor title=\"Create new product\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        maxWidth: \"50%\",\r\n        margin: \"60px auto\",\r\n        boxShadow: \"1px 2px 20px 1px#d4d4d4\",\r\n        padding: \"30px\",\r\n        borderRadius: \"25px\",\r\n        backgroundColor: \"white\"\r\n    }\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport API_URL from \"../js/api\";\r\nimport axios from \"axios\";\r\n\r\nconst CreateUser = () => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const emptyInput = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    userGroup: 2\r\n  };\r\n  const [input, setInput] = useState(emptyInput);\r\n\r\n  const [errors, setErrors] = useState({\r\n    name: false,\r\n    email: false,\r\n    password: false,\r\n    confirmPassword: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (errors.confirmPassword && input.password === input.confirmPassword) {\r\n      setErrors({ ...errors, confirmPassword: false });\r\n    }\r\n  }, [input, errors]);\r\n\r\n  const handleSubmit = () => {\r\n    const { name, email, password, confirmPassword, userGroup } = input;\r\n\r\n    if (password !== confirmPassword) {\r\n      setErrors({ ...errors, confirmPassword: true });\r\n      return;\r\n    }\r\n    console.log(input);\r\n\r\n    axios\r\n      .post(API_URL + \"newUser\", { name, email, password, userGroup })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          setInput(emptyInput);\r\n          enqueueSnackbar(res.data.message, {\r\n            variant: \"success\",\r\n            anchorOrigin: {\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\"\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        enqueueSnackbar(\"User creation failed\", {\r\n          variant: \"error\",\r\n          anchorOrigin: {\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\"\r\n          }\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setInput({ ...input, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1 className={classes.header}>Create User</h1>\r\n      <TextField\r\n        name=\"name\"\r\n        label=\"Name\"\r\n        value={input.name}\r\n        onChange={handleChange}\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        value={input.email}\r\n        onChange={handleChange}\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        value={input.password}\r\n        onChange={handleChange}\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        name=\"confirmPassword\"\r\n        label=\"Confirm password\"\r\n        type=\"password\"\r\n        value={input.confirmPassword}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        error={errors.confirmPassword}\r\n        helperText={errors.confirmPassword ? \"Passwords do not match\" : \"\"}\r\n      />\r\n      <Select\r\n        labelId=\"demo-simple-select-label\"\r\n        id=\"demo-simple-select\"\r\n        value={input.userGroup}\r\n        onChange={handleChange}\r\n        name=\"userGroup\"\r\n        fullWidth\r\n        style={{ marginTop: \"20px\" }}\r\n      >\r\n        <MenuItem value={2}>Salesperson (2)</MenuItem>\r\n        <MenuItem value={1}>Product owner (1)</MenuItem>\r\n        <MenuItem value={0}>Admin (0)</MenuItem>\r\n      </Select>\r\n      <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: \"50%\",\r\n    margin: \"60px auto\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n    },\r\n    boxShadow: \"1px 2px 20px 1px#d4d4d4\",\r\n    padding: \"30px\",\r\n    borderRadius: \"25px\",\r\n    backgroundColor: \"white\"\r\n  },\r\n  header: {\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: 300,\r\n    fontStyle: \"italic\",\r\n    margin: \"20px auto\",\r\n    position: \"relative\",\r\n    textAlign: \"center\"\r\n  }\r\n}));\r\n\r\nexport default CreateUser;\r\n","import React from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../js/api\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport default class Users extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        { title: \"Name\", field: \"name\" },\r\n        {\r\n          title: \"Email\",\r\n          field: \"email\"\r\n        },\r\n        {\r\n          title: \"Usergroup\",\r\n          field: \"userGroup\",\r\n          lookup: { 0: \"Admin\", 1: \"Product Owner\", 2: \"Merchant\" }\r\n        }\r\n      ],\r\n      data: [],\r\n      popup: props.enqueueSnackbar\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProducts();\r\n  }\r\n\r\n  getProducts() {\r\n    axios.get(API_URL + \"users\").then(response => {\r\n      console.log(response.data);\r\n      this.setState({ data: response.data });\r\n    });\r\n  }\r\n\r\n  editUser(reqEmail, newData) {\r\n    newData.reqEmail = reqEmail;\r\n\r\n    axios\r\n      .post(API_URL + \"editUser\", newData)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          console.log(\"ok\");\r\n          this.state.popup(res.data.message, {\r\n            variant: \"success\",\r\n            anchorOrigin: {\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\"\r\n            }\r\n          });\r\n          this.refreshTable();\r\n        } else {\r\n          console.log(\"no ok\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n      });\r\n  }\r\n\r\n  deleteUser(userData) {\r\n    const email = userData.email;\r\n    axios\r\n      .post(API_URL + \"deleteUser\", { email: email })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          console.log(\"ok\");\r\n        } else {\r\n          console.log(\"no ok\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MaterialTable\r\n        title=\"All Users\"\r\n        columns={this.state.columns}\r\n        data={this.state.data}\r\n        options={{ actionsColumnIndex: -1 }}\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                {\r\n                  this.editUser(oldData.email, newData);\r\n                  const data = [...this.state.data];\r\n                  const index = data.indexOf(oldData);\r\n                  data[index] = newData;\r\n                  this.setState({ data }, () => resolve());\r\n                }\r\n                resolve();\r\n              }, 1000);\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                {\r\n                  this.deleteUser(oldData);\r\n                  let data = [...this.state.data];\r\n                  const index = data.indexOf(oldData);\r\n                  data.splice(index, 1);\r\n                  this.setState({ data }, () => resolve());\r\n                }\r\n                resolve();\r\n              }, 1000);\r\n            })\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../js/api\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function Profile() {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const emptyInput = {\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  };\r\n  const [input, setInput] = useState(emptyInput);\r\n\r\n  const [errors, setErrors] = useState({\r\n    password: false,\r\n    confirmPassword: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (errors.confirmPassword && input.password === input.confirmPassword) {\r\n      setErrors({ ...errors, confirmPassword: false });\r\n    }\r\n  }, [input, errors]);\r\n\r\n  const handleChange = e => {\r\n    setInput({ ...input, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const { oldPassword, password, confirmPassword } = input;\r\n\r\n    if (password !== confirmPassword) {\r\n      setErrors({ ...errors, confirmPassword: true });\r\n      return;\r\n    }\r\n    console.log(input);\r\n\r\n    axios\r\n      .post(API_URL + \"editPassword\", { oldPassword, password })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.status === 201) {\r\n          setInput(emptyInput);\r\n          enqueueSnackbar(\"Password changed.\", {\r\n            variant: \"success\",\r\n            anchorOrigin: {\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\"\r\n            }\r\n          });\r\n        } else {\r\n          setInput(emptyInput);\r\n          enqueueSnackbar(res.data.message, {\r\n            variant: \"error\",\r\n            anchorOrigin: {\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\"\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n        enqueueSnackbar(\"Password update failed.\", {\r\n          variant: \"error\",\r\n          anchorOrigin: {\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\"\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1 className={classes.header}>Change Password</h1>\r\n      <TextField\r\n        name=\"oldPassword\"\r\n        label=\"Old Password\"\r\n        value={input.oldPassword}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        type=\"password\"\r\n      />\r\n      <TextField\r\n        name=\"password\"\r\n        label=\"New password\"\r\n        type=\"password\"\r\n        value={input.password}\r\n        onChange={handleChange}\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        name=\"confirmPassword\"\r\n        label=\"Confirm password\"\r\n        type=\"password\"\r\n        value={input.confirmPassword}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        error={errors.confirmPassword}\r\n        helperText={errors.confirmPassword ? \"Passwords do not match\" : \"\"}\r\n      />\r\n      <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: \"50%\",\r\n    margin: \"60px auto\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n    },\r\n    boxShadow: \"1px 2px 20px 1px#d4d4d4\",\r\n    padding: \"30px\",\r\n    borderRadius: \"25px\",\r\n    backgroundColor: \"white\"\r\n  },\r\n  header: {\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: 300,\r\n    fontStyle: \"italic\",\r\n    margin: \"20px auto\",\r\n    position: \"relative\",\r\n    textAlign: \"center\"\r\n  }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Profile from \"./profile\";\r\n\r\nexport default function Settings() {\r\n  const classes = useStyles();\r\n\r\n  return <Profile />;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 700,\r\n    margin: \"auto\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#e53935\"\r\n        },\r\n        secondary: {\r\n            main: \"#dd2c00\"\r\n        },\r\n        contrastThreshold: 3,\r\n        tonalOffset: 0.2\r\n    }\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../js/api\";\r\nimport RestoreIcon from \"@material-ui/icons/Restore\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport default class DeletedProducts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [\r\n                { title: \"Product name\", field: \"productName\" },\r\n                {\r\n                    title: \"Product owner\",\r\n                    field: \"productOwner\"\r\n                },\r\n                {\r\n                    title: \"Lifecycle status\",\r\n                    field: \"lifecycleStatus\"\r\n                },\r\n                {\r\n                    title: \"Business type\",\r\n                    field: \"businessType\"\r\n                }\r\n            ],\r\n            data: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDeletedProducts();\r\n    }\r\n\r\n    getDeletedProducts() {\r\n        axios.get(API_URL + \"deletedProducts\").then(response => {\r\n            console.log(response.data);\r\n            this.setState({ data: response.data });\r\n        });\r\n    }\r\n\r\n    restoreProduct(product) {\r\n        console.log(product);\r\n        product.deleted = false;\r\n        axios\r\n            .post(API_URL + \"editProduct\", product)\r\n            .then(response => {\r\n                console.log(response);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                console.log(error.response);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MaterialTable\r\n                title=\"All Users\"\r\n                columns={this.state.columns}\r\n                data={this.state.data}\r\n                options={{ actionsColumnIndex: -1 }}\r\n                actions={[\r\n                    {\r\n                        icon: \"restoreIcon\",\r\n                        tooltip: \"Restore product\",\r\n                        onClick: (event, rowData) =>\r\n                            this.restoreProduct(rowData)\r\n                    }\r\n                ]}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ProductCard(props) {\r\n    const classes = useStyles();\r\n    const { product } = props;\r\n\r\n    return (\r\n        <Grid item xs>\r\n            <Card className={classes.card}>\r\n                <CardActionArea>\r\n                    <Link to={\"/product/\" + product._id}>\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={\r\n                                product.logos[0]\r\n                                    ? product.logos[product.logos.length - 1]\r\n                                    : \"https://www.cowgirlcontractcleaning.com/wp-content/uploads/sites/360/2018/05/placeholder-img-4.jpg\"\r\n                            }\r\n                            title=\"Contemplative Reptile\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography\r\n                                gutterBottom\r\n                                variant=\"h5\"\r\n                                component=\"h2\"\r\n                            >\r\n                                {product.productName}\r\n                            </Typography>\r\n                            <Typography\r\n                                variant=\"body2\"\r\n                                color=\"textSecondary\"\r\n                                component=\"p\"\r\n                                className={classes.shortDescription}\r\n                            >\r\n                                {product.shortDescription}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Link>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                        Share\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                        Learn More\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        textAlign: \"center\",\r\n        color: theme.palette.text.secondary,\r\n        maxWidth: 300,\r\n        minWidth: 200,\r\n        \"& a\": {\r\n            color: \"black\"\r\n        }\r\n    },\r\n    media: {\r\n        height: 140\r\n    },\r\n    shortDescription: {\r\n        minHeight: 62\r\n    }\r\n}));\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport API_URL from \"../js/api\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport UserContext from \"./UserContext\";\r\nimport SearchField from \"./SearchField\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nexport default function ProductsView() {\r\n    const classes = useStyles();\r\n    const [products, setProducts] = useState([]);\r\n    const [cancelTimeout, setCancelTimeout] = useState(null);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [filters, setFilters] = useState({\r\n        myProducts: false,\r\n        isIdea: false,\r\n        isParticipant: false,\r\n        isClassified: false\r\n    });\r\n\r\n    const user = useContext(UserContext);\r\n\r\n    const getProducts = () => {\r\n        axios\r\n            .get(API_URL + \"products\", {\r\n                params: {\r\n                    filters,\r\n                    search\r\n                }\r\n            })\r\n            .then(response => {\r\n                setProducts(response.data);\r\n            })\r\n            .catch(err => console.log(err.message));\r\n    };\r\n\r\n    useEffect(() => {\r\n        debounce(search, getProducts);\r\n    }, [search]);\r\n\r\n    useEffect(getProducts, [filters, user.userGroup]);\r\n\r\n    const handleFilterChange = e => {\r\n        setFilters({ ...filters, [e.target.name]: e.target.checked });\r\n    };\r\n\r\n    const debounce = (text, callback) => {\r\n        if (cancelTimeout) {\r\n            clearTimeout(cancelTimeout);\r\n            setCancelTimeout(null);\r\n        }\r\n        const t = setTimeout(callback, 250);\r\n        setCancelTimeout(t);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.searchField}>\r\n                <SearchField onSearch={e => setSearch(e.target.value)} />\r\n            </div>\r\n            <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                <FormLabel component=\"legend\">Filters</FormLabel>\r\n                <FormGroup>\r\n                    {user.userGroup ? (\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={filters.myProducts}\r\n                                    color=\"primary\"\r\n                                    onChange={handleFilterChange}\r\n                                    name=\"myProducts\"\r\n                                />\r\n                            }\r\n                            label=\"Created by me\"\r\n                        />\r\n                    ) : null}\r\n                    {user.userGroup ? (\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={filters.isParticipant}\r\n                                    color=\"primary\"\r\n                                    onChange={handleFilterChange}\r\n                                    name=\"isParticipant\"\r\n                                />\r\n                            }\r\n                            label=\"Participant\"\r\n                        />\r\n                    ) : null}\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={filters.ideas}\r\n                                color=\"primary\"\r\n                                name=\"isIdea\"\r\n                                onChange={handleFilterChange}\r\n                            />\r\n                        }\r\n                        label=\"Idea\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n            {user.userGroup ? (\r\n                <FormControl\r\n                    component=\"fieldset\"\r\n                    className={classes.formControl}\r\n                >\r\n                    <FormLabel component=\"legend\">Warning</FormLabel>\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={filters.isClassified}\r\n                                    color=\"primary\"\r\n                                    onChange={handleFilterChange}\r\n                                    name=\"isClassified\"\r\n                                />\r\n                            }\r\n                            label=\"Include classified products\"\r\n                        />\r\n                    </FormGroup>\r\n                </FormControl>\r\n            ) : null}\r\n            <Grid container spacing={3}>\r\n                {products.map(product => (\r\n                    <ProductCard key={product._id} product={product} />\r\n                ))}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        margin: theme.spacing(2),\r\n        textAlign: \"left\"\r\n    },\r\n    searchField: {\r\n        width: 200\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(3)\r\n    },\r\n    image: {\r\n        width: 128,\r\n        height: 128\r\n    },\r\n    img: {\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        maxWidth: \"100%\",\r\n        maxHeight: \"100%\"\r\n    }\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Product from \"./Product\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport API_URL from \"../js/api\";\r\nimport ProductEditor from \"./ProductEditor\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\n\r\nconst ProductView = () => {\r\n    const classes = useStyles();\r\n    const [product, setProduct] = useState(null);\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            axios\r\n                .get(API_URL + \"product/\" + id)\r\n                .then(res => setProduct(res.data))\r\n                .catch(err => console.log(err));\r\n        }\r\n    }, [id]);\r\n\r\n    const onEdit = () => {\r\n        axios\r\n            .get(API_URL + \"product/\" + id)\r\n            .then(res => setProduct(res.data))\r\n            .catch(err => console.log(err));\r\n        setIsEditMode(false);\r\n    };\r\n\r\n    const toggleEditMode = () => {\r\n        setIsEditMode(state => !state);\r\n    };\r\n\r\n    if (!product) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {isEditMode ? (\r\n                <ProductEditor\r\n                    product={product}\r\n                    toggleEditMode={toggleEditMode}\r\n                    onEdit={onEdit}\r\n                />\r\n            ) : (\r\n                <Product\r\n                    product={product}\r\n                    toggleEditMode={\r\n                        product.isAllowedToEdit ? toggleEditMode : null\r\n                    }\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(4)\r\n    }\r\n}));\r\n\r\nexport default ProductView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Nav from \"./Nav\";\r\nimport Products from \"./Products\";\r\nimport CreateProduct from \"./CreateProduct\";\r\nimport CreateUser from \"./CreateUser\";\r\nimport Users from \"./Users\";\r\nimport Settings from \"./Settings\";\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport { UserProvider } from \"./UserContext\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport theme from \"../theme\";\r\nimport DeletedProducts from \"./DeletedProducts\";\r\nimport ProductsView from \"./ProductsView\";\r\nimport API_URL from \"../js/api\";\r\nimport ProductView from \"./ProductView\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction App() {\r\n    const [authorization, setAuthorization] = useState({\r\n        email: \"\",\r\n        userGroup: null,\r\n        name: \"\"\r\n    });\r\n\r\n    const USERGROUP = {\r\n        ADMIN: \"0\",\r\n        PRODUCT_OWNER: \"1\",\r\n        SALESPERSON: \"2\"\r\n    };\r\n\r\n    const links = [\r\n        { name: \"Home\", url: \"/\" },\r\n        { name: \"Products\", url: \"/products\" }\r\n    ];\r\n\r\n    if (authorization.userGroup) {\r\n        links.push({ name: \"Create product\", url: \"/create-product\" });\r\n    }\r\n\r\n    if (authorization.userGroup === USERGROUP.ADMIN) {\r\n        links.push({ name: \"Users\", url: \"/users\" });\r\n        links.push({ name: \"Create user\", url: \"/create-user\" });\r\n        links.push({ name: \"Deleted products\", url: \"/deleted-products\" });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLoginState();\r\n        setInterval(getLoginState, 1000 * 60); // Read login state every minute\r\n    }, []);\r\n\r\n    function getLoginState() {\r\n        axios\r\n            .get(API_URL + \"session\")\r\n            .then(response => {\r\n                const { email, name, userGroup } = response.data;\r\n                if (email && userGroup) {\r\n                    setAuthorization({ email, name, userGroup });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <ThemeProvider theme={theme}>\r\n                <UserProvider value={authorization}>\r\n                    <SnackbarProvider preventDuplicate maxSnack={3}>\r\n                        <Router>\r\n                            <Nav\r\n                                links={links}\r\n                                authorization={authorization}\r\n                                setAuthorization={setAuthorization}\r\n                            />\r\n                            <div>\r\n                                <Switch>\r\n                                    <Route\r\n                                        exact\r\n                                        path=\"/\"\r\n                                        component={ProductsView}\r\n                                    />\r\n                                    <Route path=\"/products-old\">\r\n                                        <Products />\r\n                                    </Route>\r\n                                    <Route\r\n                                        path=\"/products\"\r\n                                        component={ProductsView}\r\n                                    />\r\n                                    <Route path=\"/product/:id\">\r\n                                        <ProductView />\r\n                                    </Route>\r\n                                    <Route path=\"/settings\">\r\n                                        <Settings />\r\n                                    </Route>\r\n                                    <Route path=\"/users\">\r\n                                        <Users />\r\n                                    </Route>\r\n                                    <Route path=\"/deleted-products\">\r\n                                        <DeletedProducts />\r\n                                    </Route>\r\n                                    <Route path=\"/create-product\">\r\n                                        {authorization.userGroup ? (\r\n                                            <CreateProduct />\r\n                                        ) : (\r\n                                            <div>Not found</div>\r\n                                        )}\r\n                                    </Route>\r\n                                    <Route path=\"/create-user\">\r\n                                        {authorization.userGroup ===\r\n                                        USERGROUP.ADMIN ? (\r\n                                            <CreateUser />\r\n                                        ) : (\r\n                                            <div>Not found</div>\r\n                                        )}\r\n                                    </Route>\r\n                                </Switch>\r\n                            </div>\r\n                        </Router>\r\n                    </SnackbarProvider>\r\n                </UserProvider>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}