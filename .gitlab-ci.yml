image: ayufan/openshift-cli

stages:
    - testing
    - build

variables:
  OPENSHIFT_SERVER: https://rahti.csc.fi:8443/
  OPENSHIFT_DOMAIN: rahti.csc.fi
  
  # Configure this variable in Secure Variables:
  OPENSHIFT_TOKEN: "$OPENSHIFT_TOKEN"

.deploy: &deploy
  before_script:
    - cd
    - oc login "$OPENSHIFT_SERVER" --token="$OPENSHIFT_TOKEN" --insecure-skip-tls-verify
    - oc status
    - oc whoami
    - echo $CI_PROJECT_NAME
    - git clone https://gitlab.labranet.jamk.fi/digiateam/front-end.git
  tags:
    - shell

image: node

eslint:
  stage: testing
  allow_failure: true
  script:
    - npm install eslint --save-dev
    - npm install eslint-plugin-react@latest --save-dev
    #- ./node_modules/.bin/eslint --env browser --plugin eslint-plugin-react src/**
    -  echo 'Y\r3\r\rN\r1\r1\r2\r' | ./node_modules/.bin/eslint --init
    #- ./node_modules/.bin/eslint src/**

code_quality:
  stage: testing
  image: docker:stable
  allow_failure: false
  services:
    - docker:stable-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    CODE_QUALITY_IMAGE: "registry.gitlab.com/gitlab-org/security-products/codequality:0.85.6"
  script:
    - |
      if ! docker info &>/dev/null; then
        if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]; then
          export DOCKER_HOST='tcp://localhost:2375'
        fi
      fi
    - docker pull registry.gitlab.com/gitlab-org/security-products/codequality:0.85.6
    - docker run 
        --dns 8.8.8.8
        --env SOURCE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        "$CODE_QUALITY_IMAGE" /code
  artifacts:
    reports:
      codequality: $CI_PROJECT_DIR/gl-code-quality-report.json
    expire_in: 1 week
  dependencies: []
  only:
    refs:
      - branches
      - tags
  except:
    variables:
      - $CODE_QUALITY_DISABLED
  tags:
    - shell
    

# Read more about this feature here: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/
# List of the variables: https://gitlab.com/gitlab-org/security-products/dependency-scanning#settings
# How to set: https://docs.gitlab.com/ee/ci/yaml/#variables

variables:
  DS_ANALYZER_IMAGE_PREFIX: "registry.gitlab.com/gitlab-org/security-products/analyzers"
  DS_DEFAULT_ANALYZERS: "retire.js, gemnasium"
  DS_MAJOR_VERSION: 2
  DS_DISABLE_DIND: "false"

dependency_scanning:
  stage: testing
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export DS_VERSION=${SP_VERSION:-$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')}
    - |
      if ! docker info &>/dev/null; then
        if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]; then
          export DOCKER_HOST='tcp://localhost:2375'
        fi
      fi
    - | # this is required to avoid undesirable reset of Docker image ENV variables being set on build stage
      function propagate_env_vars() {
        CURRENT_ENV=$(printenv)

        for VAR_NAME; do
          echo $CURRENT_ENV | grep "${VAR_NAME}=" > /dev/null && echo "--env $VAR_NAME "
        done
      }
    - |
      docker run \
        $(propagate_env_vars \
          DS_ANALYZER_IMAGES \
          DS_ANALYZER_IMAGE_PREFIX \
          DS_ANALYZER_IMAGE_TAG \
          DS_DEFAULT_ANALYZERS \
          DS_EXCLUDED_PATHS \
          DS_DOCKER_CLIENT_NEGOTIATION_TIMEOUT \
          DS_PULL_ANALYZER_IMAGE_TIMEOUT \
          DS_RUN_ANALYZER_TIMEOUT \
          DS_PYTHON_VERSION \
          DS_PIP_VERSION \
          DS_PIP_DEPENDENCY_PATH \
          PIP_INDEX_URL \
          PIP_EXTRA_INDEX_URL \
          PIP_REQUIREMENTS_FILE \
          MAVEN_CLI_OPTS \
          BUNDLER_AUDIT_UPDATE_DISABLED \
        ) \
        --volume "$PWD:/code" \
        --volume /var/run/docker.sock:/var/run/docker.sock \
        "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$DS_VERSION" /code
  artifacts:
    reports:
      dependency_scanning: gl-dependency-scanning-report.json
  dependencies: []
  only:
    refs:
      - branches
    variables:
      - $GITLAB_FEATURES =~ /\bdependency_scanning\b/
  except:
    variables:
      - $DEPENDENCY_SCANNING_DISABLED
      - $DS_DISABLE_DIND == 'true'

.ds-analyzer:
  extends: dependency_scanning
  services: []
  except:
    variables:
      - $DS_DISABLE_DIND == 'false'
  script:
    - /analyzer run

gemnasium-dependency_scanning:
  extends: .ds-analyzer
  image:
    name: "$DS_ANALYZER_IMAGE_PREFIX/gemnasium:$DS_MAJOR_VERSION"
  only:
    variables:
      - $GITLAB_FEATURES =~ /\bdependency_scanning\b/ &&
        $DS_DEFAULT_ANALYZERS =~ /gemnasium/ &&
        $CI_PROJECT_REPOSITORY_LANGUAGES =~ /ruby|javascript|php/

retire-js-dependency_scanning:
  extends: .ds-analyzer
  image:
    name: "$DS_ANALYZER_IMAGE_PREFIX/retire.js:$DS_MAJOR_VERSION"
  only:
    variables:
      - $GITLAB_FEATURES =~ /\bdependency_scanning\b/ &&
        $DS_DEFAULT_ANALYZERS =~ /retire.js/ &&
        $CI_PROJECT_REPOSITORY_LANGUAGES =~ /javascript/

buildProductToOpenshift:
 stage: build
 script:
    - ls
    - unset CI
    - npm ci # Build for prod
    - REACT_APP_API_URL=http://backend-tuhlari.rahtiapp.fi/ npm run build --prod
    - oc project tuhlari
    - oc start-build front-end --from-dir="build" --follow --wait